#import "org_xmlvm_iphone_NSTimer.h"
#import "java_lang_Runnable.h"
#import "org_xmlvm_iphone_NSObject.h"
#import "android_os_Message.h"
#import "java_lang_String.h"
#import "android_internal_Assert.h"
#import "android_os_Looper.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_os_Handler.h"


@implementation android_os_Handler;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_os_Handler") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        toRun_java_lang_Runnable = (id) [NSNull null];
        timer_org_xmlvm_iphone_NSTimer = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [toRun_java_lang_Runnable release];
    [timer_org_xmlvm_iphone_NSTimer release];
    [super dealloc];
}

- (void) __init_android_os_Handler__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [NSNull null];
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    [_r0.o retain];
    [((android_os_Handler*) _r1.o)->toRun_java_lang_Runnable release];
    ((android_os_Handler*) _r1.o)->toRun_java_lang_Runnable = _r0.o;
    [_r0.o retain];
    [((android_os_Handler*) _r1.o)->timer_org_xmlvm_iphone_NSTimer release];
    ((android_os_Handler*) _r1.o)->timer_org_xmlvm_iphone_NSTimer = _r0.o;
    [_pool release];
    return;
}


- (void) __init_android_os_Handler___android_os_Looper :(android_os_Looper*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [NSNull null];
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    [_r0.o retain];
    [((android_os_Handler*) _r1.o)->toRun_java_lang_Runnable release];
    ((android_os_Handler*) _r1.o)->toRun_java_lang_Runnable = _r0.o;
    [_r0.o retain];
    [((android_os_Handler*) _r1.o)->timer_org_xmlvm_iphone_NSTimer release];
    ((android_os_Handler*) _r1.o)->timer_org_xmlvm_iphone_NSTimer = _r0.o;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}


- (void) run___org_xmlvm_iphone_NSTimer :(org_xmlvm_iphone_NSTimer*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [[((android_os_Handler*) _r1.o)->toRun_java_lang_Runnable retain] autorelease];
    [((java_lang_Runnable*) _r0.o) run__];
    [_pool release];
    return;
}


- (int) postDelayed___java_lang_Runnable_long :(java_lang_Runnable*)n1 :(long)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.o = n1;
    _r5.l = n2;
    _r2.i = 1;
    [_r4.o retain];
    [((android_os_Handler*) _r3.o)->toRun_java_lang_Runnable release];
    ((android_os_Handler*) _r3.o)->toRun_java_lang_Runnable = _r4.o;
    _r0.f = (float) _r5.l;
    _r1.f = 1000.0;
    _r0.f = _r0.f / _r1.f;
    ((android_os_Handler*) _r3.o)->delay_float = _r0.f;
    _r0.o = @"xmlvmStartTimer";
    _r1.o = [NSNull null];
    [org_xmlvm_iphone_NSObject performSelectorOnMainThread___java_lang_Object_java_lang_String_java_lang_Object_boolean:_r3.o:_r0.o:_r1.o:_r2.i];
    [_pool release];
    return _r2.i;
}


- (void) post___java_lang_Runnable :(java_lang_Runnable*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.o = n1;
    [_r4.o retain];
    [((android_os_Handler*) _r3.o)->toRun_java_lang_Runnable release];
    ((android_os_Handler*) _r3.o)->toRun_java_lang_Runnable = _r4.o;
    _r0.f = 0.0;
    ((android_os_Handler*) _r3.o)->delay_float = _r0.f;
    _r0.o = @"xmlvmStartTimer";
    _r1.o = [NSNull null];
    _r2.i = 1;
    [org_xmlvm_iphone_NSObject performSelectorOnMainThread___java_lang_Object_java_lang_String_java_lang_Object_boolean:_r3.o:_r0.o:_r1.o:_r2.i];
    [_pool release];
    return;
}


- (void) removeCallbacks___java_lang_Runnable :(java_lang_Runnable*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [[((android_os_Handler*) _r1.o)->toRun_java_lang_Runnable retain] autorelease];
    if (_r2.o != _r0.o) goto label9;
    _r0.o = [[((android_os_Handler*) _r1.o)->timer_org_xmlvm_iphone_NSTimer retain] autorelease];
    [((org_xmlvm_iphone_NSTimer*) _r0.o) invalidate__];
    label9:;
    [_pool release];
    return;
}


- (void) xmlvmStartTimer___java_lang_Object :(java_lang_Object*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r6.o = self;
    _r7.o = n1;
    _r0.o = [[[org_xmlvm_iphone_NSTimer alloc] init] autorelease];
    _r1.f = ((android_os_Handler*) _r6.o)->delay_float;
    _r3.o = @"run";
    _r4.o = [NSNull null];
    _r5.i = 0;
    _r2 = _r6;
    [((org_xmlvm_iphone_NSTimer*) _r0.o) __init_org_xmlvm_iphone_NSTimer___float_java_lang_Object_java_lang_String_java_lang_Object_boolean:_r1.f:_r2.o:_r3.o:_r4.o:_r5.i];
    [_r0.o retain];
    [((android_os_Handler*) _r6.o)->timer_org_xmlvm_iphone_NSTimer release];
    ((android_os_Handler*) _r6.o)->timer_org_xmlvm_iphone_NSTimer = _r0.o;
    [_pool release];
    return;
}


- (void) handleMessage___android_os_Message :(android_os_Message*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}


- (void) dispatchMessage___android_os_Message :(android_os_Message*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}


- (void) sendMessage___android_os_Message :(android_os_Message*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}


- (int) sendMessageDelayed___android_os_Message_long :(android_os_Message*)n1 :(long)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r3.l = n2;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r0.i = 0;
    [_pool release];
    return _r0.i;
}



@end

