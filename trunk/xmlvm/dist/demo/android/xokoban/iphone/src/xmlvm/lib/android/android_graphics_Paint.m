#import "android_graphics_Paint_Cap.h"
#import "android_graphics_Rect.h"
#import "android_graphics_Paint_FontMetrics.h"
#import "android_util_Log.h"
#import "org_xmlvm_iphone_UIFont.h"
#import "org_xmlvm_iphone_CGSize.h"
#import "java_lang_ArrayIndexOutOfBoundsException.h"
#import "org_xmlvm_iphone_NSString.h"
#import "java_lang_IndexOutOfBoundsException.h"
#import "java_lang_String.h"
#import "android_graphics_Paint_FontMetricsInt.h"
#import "android_graphics_Paint_Style.h"
#import "android_graphics_Paint_Join.h"
#import "java_lang_NullPointerException.h"
#import "android_graphics_Paint_Align.h"
#import "android_graphics_Typeface.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_graphics_Paint.h"

int _STATIC_android_graphics_Paint_ANTI_ALIAS_FLAG = 1;
int _STATIC_android_graphics_Paint_FILTER_BITMAP_FLAG = 2;
int _STATIC_android_graphics_Paint_DITHER_FLAG = 4;
int _STATIC_android_graphics_Paint_UNDERLINE_TEXT_FLAG = 8;
int _STATIC_android_graphics_Paint_STRIKE_THRU_TEXT_FLAG = 16;
int _STATIC_android_graphics_Paint_FAKE_BOLD_TEXT_FLAG = 32;
int _STATIC_android_graphics_Paint_LINEAR_TEXT_FLAG = 64;
int _STATIC_android_graphics_Paint_SUBPIXEL_TEXT_FLAG = 128;
int _STATIC_android_graphics_Paint_DEV_KERN_TEXT_FLAG = 256;
int _STATIC_android_graphics_Paint_DEFAULT_PAINT_FLAGS = 256;

@implementation android_graphics_Paint;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_graphics_Paint") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        mTypeface_android_graphics_Typeface = (id) [NSNull null];
        mStyle_android_graphics_Paint_Style = (id) [NSNull null];
        mCap_android_graphics_Paint_Cap = (id) [NSNull null];
        mJoin_android_graphics_Paint_Join = (id) [NSNull null];
        mAlign_android_graphics_Paint_Align = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [mTypeface_android_graphics_Typeface release];
    [mStyle_android_graphics_Paint_Style release];
    [mCap_android_graphics_Paint_Cap release];
    [mJoin_android_graphics_Paint_Join release];
    [mAlign_android_graphics_Paint_Align release];
    [super dealloc];
}

+ (int) _GET_ANTI_ALIAS_FLAG
{
    return _STATIC_android_graphics_Paint_ANTI_ALIAS_FLAG;
}

+ (void) _PUT_ANTI_ALIAS_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_ANTI_ALIAS_FLAG = v;
}

+ (int) _GET_FILTER_BITMAP_FLAG
{
    return _STATIC_android_graphics_Paint_FILTER_BITMAP_FLAG;
}

+ (void) _PUT_FILTER_BITMAP_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_FILTER_BITMAP_FLAG = v;
}

+ (int) _GET_DITHER_FLAG
{
    return _STATIC_android_graphics_Paint_DITHER_FLAG;
}

+ (void) _PUT_DITHER_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_DITHER_FLAG = v;
}

+ (int) _GET_UNDERLINE_TEXT_FLAG
{
    return _STATIC_android_graphics_Paint_UNDERLINE_TEXT_FLAG;
}

+ (void) _PUT_UNDERLINE_TEXT_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_UNDERLINE_TEXT_FLAG = v;
}

+ (int) _GET_STRIKE_THRU_TEXT_FLAG
{
    return _STATIC_android_graphics_Paint_STRIKE_THRU_TEXT_FLAG;
}

+ (void) _PUT_STRIKE_THRU_TEXT_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_STRIKE_THRU_TEXT_FLAG = v;
}

+ (int) _GET_FAKE_BOLD_TEXT_FLAG
{
    return _STATIC_android_graphics_Paint_FAKE_BOLD_TEXT_FLAG;
}

+ (void) _PUT_FAKE_BOLD_TEXT_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_FAKE_BOLD_TEXT_FLAG = v;
}

+ (int) _GET_LINEAR_TEXT_FLAG
{
    return _STATIC_android_graphics_Paint_LINEAR_TEXT_FLAG;
}

+ (void) _PUT_LINEAR_TEXT_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_LINEAR_TEXT_FLAG = v;
}

+ (int) _GET_SUBPIXEL_TEXT_FLAG
{
    return _STATIC_android_graphics_Paint_SUBPIXEL_TEXT_FLAG;
}

+ (void) _PUT_SUBPIXEL_TEXT_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_SUBPIXEL_TEXT_FLAG = v;
}

+ (int) _GET_DEV_KERN_TEXT_FLAG
{
    return _STATIC_android_graphics_Paint_DEV_KERN_TEXT_FLAG;
}

+ (void) _PUT_DEV_KERN_TEXT_FLAG: (int) v
{
    _STATIC_android_graphics_Paint_DEV_KERN_TEXT_FLAG = v;
}

+ (int) _GET_DEFAULT_PAINT_FLAGS
{
    return _STATIC_android_graphics_Paint_DEFAULT_PAINT_FLAGS;
}

+ (void) _PUT_DEFAULT_PAINT_FLAGS: (int) v
{
    _STATIC_android_graphics_Paint_DEFAULT_PAINT_FLAGS = v;
}

- (void) __init_android_graphics_Paint__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = 0;
    [((android_graphics_Paint*) _r1.o) __init_android_graphics_Paint___int:_r0.i];
    [_pool release];
    return;
}


- (void) __init_android_graphics_Paint___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.i = n1;
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    _r0.i = _r2.i | 256;
    [((android_graphics_Paint*) _r1.o) setFlags___int:_r0.i];
    _r0.f = 1.0;
    ((android_graphics_Paint*) _r1.o)->mInvCompatScaling_float = _r0.f;
    ((android_graphics_Paint*) _r1.o)->mCompatScaling_float = _r0.f;
    [_pool release];
    return;
}


- (void) __init_android_graphics_Paint___android_graphics_Paint :(android_graphics_Paint*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    _r0.i = ((android_graphics_Paint*) _r2.o)->mHasCompatScaling_boolean;
    ((android_graphics_Paint*) _r1.o)->mHasCompatScaling_boolean = _r0.i;
    _r0.f = ((android_graphics_Paint*) _r2.o)->mCompatScaling_float;
    ((android_graphics_Paint*) _r1.o)->mCompatScaling_float = _r0.f;
    _r0.f = ((android_graphics_Paint*) _r2.o)->mInvCompatScaling_float;
    ((android_graphics_Paint*) _r1.o)->mInvCompatScaling_float = _r0.f;
    [_pool release];
    return;
}


- (void) reset__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = 256;
    [((android_graphics_Paint*) _r1.o) setFlags___int:_r0.i];
    _r0.i = 0;
    ((android_graphics_Paint*) _r1.o)->mHasCompatScaling_boolean = _r0.i;
    _r0.f = 1.0;
    ((android_graphics_Paint*) _r1.o)->mInvCompatScaling_float = _r0.f;
    ((android_graphics_Paint*) _r1.o)->mCompatScaling_float = _r0.f;
    [_pool release];
    return;
}


- (void) set___android_graphics_Paint :(android_graphics_Paint*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r0.o = @"xmlvm";
    _r1.o = @"android.graphics.Paint.set() is not copying all members";
    [android_util_Log w___java_lang_String_java_lang_String:_r0.o:_r1.o];
    if (_r2.o == _r3.o) goto label53;
    _r0.o = [[((android_graphics_Paint*) _r3.o)->mTypeface_android_graphics_Typeface retain] autorelease];
    [_r0.o retain];
    [((android_graphics_Paint*) _r2.o)->mTypeface_android_graphics_Typeface release];
    ((android_graphics_Paint*) _r2.o)->mTypeface_android_graphics_Typeface = _r0.o;
    _r0.i = ((android_graphics_Paint*) _r3.o)->mHasCompatScaling_boolean;
    ((android_graphics_Paint*) _r2.o)->mHasCompatScaling_boolean = _r0.i;
    _r0.f = ((android_graphics_Paint*) _r3.o)->mCompatScaling_float;
    ((android_graphics_Paint*) _r2.o)->mCompatScaling_float = _r0.f;
    _r0.f = ((android_graphics_Paint*) _r3.o)->mInvCompatScaling_float;
    ((android_graphics_Paint*) _r2.o)->mInvCompatScaling_float = _r0.f;
    _r0.i = ((android_graphics_Paint*) _r3.o)->mFlags_int;
    ((android_graphics_Paint*) _r2.o)->mFlags_int = _r0.i;
    _r0.o = [[((android_graphics_Paint*) _r3.o)->mStyle_android_graphics_Paint_Style retain] autorelease];
    [_r0.o retain];
    [((android_graphics_Paint*) _r2.o)->mStyle_android_graphics_Paint_Style release];
    ((android_graphics_Paint*) _r2.o)->mStyle_android_graphics_Paint_Style = _r0.o;
    _r0.o = [[((android_graphics_Paint*) _r3.o)->mCap_android_graphics_Paint_Cap retain] autorelease];
    [_r0.o retain];
    [((android_graphics_Paint*) _r2.o)->mCap_android_graphics_Paint_Cap release];
    ((android_graphics_Paint*) _r2.o)->mCap_android_graphics_Paint_Cap = _r0.o;
    _r0.o = [[((android_graphics_Paint*) _r3.o)->mJoin_android_graphics_Paint_Join retain] autorelease];
    [_r0.o retain];
    [((android_graphics_Paint*) _r2.o)->mJoin_android_graphics_Paint_Join release];
    ((android_graphics_Paint*) _r2.o)->mJoin_android_graphics_Paint_Join = _r0.o;
    _r0.o = [[((android_graphics_Paint*) _r3.o)->mAlign_android_graphics_Paint_Align retain] autorelease];
    [_r0.o retain];
    [((android_graphics_Paint*) _r2.o)->mAlign_android_graphics_Paint_Align release];
    ((android_graphics_Paint*) _r2.o)->mAlign_android_graphics_Paint_Align = _r0.o;
    _r0.i = ((android_graphics_Paint*) _r3.o)->mColor_int;
    ((android_graphics_Paint*) _r2.o)->mColor_int = _r0.i;
    _r0.f = ((android_graphics_Paint*) _r3.o)->mTextSize_float;
    ((android_graphics_Paint*) _r2.o)->mTextSize_float = _r0.f;
    label53:;
    [_pool release];
    return;
}


- (void) setCompatibilityScaling___float :(float)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r5.o = self;
    _r6.f = n1;
    _r4.f = 1.0;
    _r0.d = (double) _r6.f;
    _r2.d = 1.0;
    _r0.i = _r0.d > _r2.d ? 1 : (_r0.d == _r2.d ? 0 : -1);
    if (_r0.i != 0) goto label17;
    _r0.i = 0;
    ((android_graphics_Paint*) _r5.o)->mHasCompatScaling_boolean = _r0.i;
    ((android_graphics_Paint*) _r5.o)->mInvCompatScaling_float = _r4.f;
    ((android_graphics_Paint*) _r5.o)->mCompatScaling_float = _r4.f;
    label16:;
    [_pool release];
    return;
    label17:;
    _r0.i = 1;
    ((android_graphics_Paint*) _r5.o)->mHasCompatScaling_boolean = _r0.i;
    ((android_graphics_Paint*) _r5.o)->mCompatScaling_float = _r6.f;
    _r0.f = _r4.f / _r6.f;
    ((android_graphics_Paint*) _r5.o)->mInvCompatScaling_float = _r0.f;
    goto label16;
}


- (int) getFlags__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = ((android_graphics_Paint*) _r1.o)->mFlags_int;
    [_pool release];
    return _r0.i;
}


- (void) setFlags___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.i = n1;
    ((android_graphics_Paint*) _r0.o)->mFlags_int = _r1.i;
    [_pool release];
    return;
}


- (int) isAntiAlias__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 1;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setAntiAlias___boolean :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.i = n1;
    if (_r2.i == 0) goto label9;
    _r0.i = ((android_graphics_Paint*) _r1.o)->mFlags_int;
    _r0.i = _r0.i | 1;
    ((android_graphics_Paint*) _r1.o)->mFlags_int = _r0.i;
    label8:;
    [_pool release];
    return;
    label9:;
    _r0.i = ((android_graphics_Paint*) _r1.o)->mFlags_int;
    _r0.i = _r0.i & -2;
    ((android_graphics_Paint*) _r1.o)->mFlags_int = _r0.i;
    goto label8;
}


- (int) isDither__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 4;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setDither___boolean :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) isLinearText__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 64;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setLinearText___boolean :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) isSubpixelText__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 128;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setSubpixelText___boolean :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) isUnderlineText__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 8;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setUnderlineText___boolean :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) isStrikeThruText__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 16;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setStrikeThruText___boolean :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) isFakeBoldText__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 32;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setFakeBoldText___boolean :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.i = n1;
    if (_r2.i == 0) goto label9;
    _r0.i = ((android_graphics_Paint*) _r1.o)->mFlags_int;
    _r0.i = _r0.i | 32;
    ((android_graphics_Paint*) _r1.o)->mFlags_int = _r0.i;
    label8:;
    [_pool release];
    return;
    label9:;
    _r0.i = ((android_graphics_Paint*) _r1.o)->mFlags_int;
    _r0.i = _r0.i & -33;
    ((android_graphics_Paint*) _r1.o)->mFlags_int = _r0.i;
    goto label8;
}


- (int) isFilterBitmap__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = [((android_graphics_Paint*) _r1.o) getFlags__];
    _r0.i = _r0.i & 2;
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    [_pool release];
    return _r0.i;
    label10:;
    _r0.i = 0;
    goto label9;
}


- (void) setFilterBitmap___boolean :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (android_graphics_Paint_Style*) getStyle__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_Paint*) _r1.o)->mStyle_android_graphics_Paint_Style retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (void) setStyle___android_graphics_Paint_Style :(android_graphics_Paint_Style*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_r1.o retain];
    [((android_graphics_Paint*) _r0.o)->mStyle_android_graphics_Paint_Style release];
    ((android_graphics_Paint*) _r0.o)->mStyle_android_graphics_Paint_Style = _r1.o;
    [_pool release];
    return;
}


- (int) getColor__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = ((android_graphics_Paint*) _r1.o)->mColor_int;
    [_pool release];
    return _r0.i;
}


- (void) setColor___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.i = n1;
    ((android_graphics_Paint*) _r0.o)->mColor_int = _r1.i;
    [_pool release];
    return;
}


- (int) getAlpha__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) setAlpha___int :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) setARGB___int_int_int_int :(int)n1 :(int)n2 :(int)n3 :(int)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.i = n1;
    _r4.i = n2;
    _r5.i = n3;
    _r6.i = n4;
    _r0.i = _r3.i << 24;
    _r1.i = _r4.i << 16;
    _r0.i = _r0.i | _r1.i;
    _r1.i = _r5.i << 8;
    _r0.i = _r0.i | _r1.i;
    _r0.i = _r0.i | _r6.i;
    [((android_graphics_Paint*) _r2.o) setColor___int:_r0.i];
    [_pool release];
    return;
}


- (float) getStrokeWidth__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) setStrokeWidth___float :(float)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (float) getStrokeMiter__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) setStrokeMiter___float :(float)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (android_graphics_Paint_Cap*) getStrokeCap__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_Paint*) _r1.o)->mCap_android_graphics_Paint_Cap retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (void) setStrokeCap___android_graphics_Paint_Cap :(android_graphics_Paint_Cap*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_r1.o retain];
    [((android_graphics_Paint*) _r0.o)->mCap_android_graphics_Paint_Cap release];
    ((android_graphics_Paint*) _r0.o)->mCap_android_graphics_Paint_Cap = _r1.o;
    [_pool release];
    return;
}


- (android_graphics_Paint_Join*) getStrokeJoin__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_Paint*) _r1.o)->mJoin_android_graphics_Paint_Join retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (void) setStrokeJoin___android_graphics_Paint_Join :(android_graphics_Paint_Join*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_r1.o retain];
    [((android_graphics_Paint*) _r0.o)->mJoin_android_graphics_Paint_Join release];
    ((android_graphics_Paint*) _r0.o)->mJoin_android_graphics_Paint_Join = _r1.o;
    [_pool release];
    return;
}


- (android_graphics_Typeface*) getTypeface__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_Paint*) _r1.o)->mTypeface_android_graphics_Typeface retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (android_graphics_Typeface*) setTypeface___android_graphics_Typeface :(android_graphics_Typeface*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r0.o = @"xmlvm";
    _r1.o = @"android.graphics.setTypeface() not calling native_setTypeFace()";
    [android_util_Log w___java_lang_String_java_lang_String:_r0.o:_r1.o];
    [_r3.o retain];
    [((android_graphics_Paint*) _r2.o)->mTypeface_android_graphics_Typeface release];
    ((android_graphics_Paint*) _r2.o)->mTypeface_android_graphics_Typeface = _r3.o;
    [_r3.o retain];
    [_pool release];
    return _r3.o;
}


- (void) setShadowLayer___float_float_float_int :(float)n1 :(float)n2 :(float)n3 :(int)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.f = n1;
    _r4.f = n2;
    _r5.f = n3;
    _r6.i = n4;
    _r0.o = @"xmlvm";
    _r1.o = @"android.graphics.Pain.setShadowLayer() not implemented";
    [android_util_Log w___java_lang_String_java_lang_String:_r0.o:_r1.o];
    [_pool release];
    return;
}


- (void) clearShadowLayer__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r1.f = 0.0;
    _r0.i = 0;
    [((android_graphics_Paint*) _r2.o) setShadowLayer___float_float_float_int:_r1.f:_r1.f:_r1.f:_r0.i];
    [_pool release];
    return;
}


- (android_graphics_Paint_Align*) getTextAlign__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_Paint*) _r1.o)->mAlign_android_graphics_Paint_Align retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (void) setTextAlign___android_graphics_Paint_Align :(android_graphics_Paint_Align*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_r1.o retain];
    [((android_graphics_Paint*) _r0.o)->mAlign_android_graphics_Paint_Align release];
    ((android_graphics_Paint*) _r0.o)->mAlign_android_graphics_Paint_Align = _r1.o;
    [_pool release];
    return;
}


- (float) getTextSize__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.f = ((android_graphics_Paint*) _r1.o)->mTextSize_float;
    [_pool release];
    return _r0.f;
}


- (void) setTextSize___float :(float)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.f = n1;
    ((android_graphics_Paint*) _r0.o)->mTextSize_float = _r1.f;
    [_pool release];
    return;
}


- (float) getTextScaleX__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) setTextScaleX___float :(float)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (float) getTextSkewX__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) setTextSkewX___float :(float)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (float) ascent__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (float) descent__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (float) getFontMetrics___android_graphics_Paint_FontMetrics :(android_graphics_Paint_FontMetrics*)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (android_graphics_Paint_FontMetrics*) getFontMetrics__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[[android_graphics_Paint_FontMetrics alloc] init] autorelease];
    [((android_graphics_Paint_FontMetrics*) _r0.o) __init_android_graphics_Paint_FontMetrics__];
    [((android_graphics_Paint*) _r1.o) getFontMetrics___android_graphics_Paint_FontMetrics:_r0.o];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) getFontMetricsInt___android_graphics_Paint_FontMetricsInt :(android_graphics_Paint_FontMetricsInt*)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (android_graphics_Paint_FontMetricsInt*) getFontMetricsInt__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[[android_graphics_Paint_FontMetricsInt alloc] init] autorelease];
    [((android_graphics_Paint_FontMetricsInt*) _r0.o) __init_android_graphics_Paint_FontMetricsInt__];
    [((android_graphics_Paint*) _r1.o) getFontMetricsInt___android_graphics_Paint_FontMetricsInt:_r0.o];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (float) getFontSpacing__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [NSNull null];
    _r0.f = [((android_graphics_Paint*) _r1.o) getFontMetrics___android_graphics_Paint_FontMetrics:_r0.o];
    [_pool release];
    return _r0.f;
}


- (float) measureText___char_ARRAYTYPE_int_int :(XMLVMArray*)n1 :(int)n2 :(int)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.o = n1;
    _r5.i = n2;
    _r6.i = n3;
    _r2.i = ((android_graphics_Paint*) _r3.o)->mHasCompatScaling_boolean;
    if (_r2.i != 0) goto label9;
    _r2.f = [((android_graphics_Paint*) _r3.o) native_measureText___char_ARRAYTYPE_int_int:_r4.o:_r5.i:_r6.i];
    label8:;
    [_pool release];
    return _r2.f;
    label9:;
    _r0.f = [((android_graphics_Paint*) _r3.o) getTextSize__];
    _r2.f = ((android_graphics_Paint*) _r3.o)->mCompatScaling_float;
    _r2.f = _r2.f * _r0.f;
    [((android_graphics_Paint*) _r3.o) setTextSize___float:_r2.f];
    _r1.f = [((android_graphics_Paint*) _r3.o) native_measureText___char_ARRAYTYPE_int_int:_r4.o:_r5.i:_r6.i];
    [((android_graphics_Paint*) _r3.o) setTextSize___float:_r0.f];
    _r2.f = ((android_graphics_Paint*) _r3.o)->mInvCompatScaling_float;
    _r2.f = _r2.f * _r1.f;
    goto label8;
}


- (float) native_measureText___char_ARRAYTYPE_int_int :(XMLVMArray*)n1 :(int)n2 :(int)n3
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (float) measureText___java_lang_String_int_int :(java_lang_String*)n1 :(int)n2 :(int)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.o = n1;
    _r5.i = n2;
    _r6.i = n3;
    _r2.i = ((android_graphics_Paint*) _r3.o)->mHasCompatScaling_boolean;
    if (_r2.i != 0) goto label9;
    _r2.f = [((android_graphics_Paint*) _r3.o) native_measureText___java_lang_String_int_int:_r4.o:_r5.i:_r6.i];
    label8:;
    [_pool release];
    return _r2.f;
    label9:;
    _r0.f = [((android_graphics_Paint*) _r3.o) getTextSize__];
    _r2.f = ((android_graphics_Paint*) _r3.o)->mCompatScaling_float;
    _r2.f = _r2.f * _r0.f;
    [((android_graphics_Paint*) _r3.o) setTextSize___float:_r2.f];
    _r1.f = [((android_graphics_Paint*) _r3.o) native_measureText___java_lang_String_int_int:_r4.o:_r5.i:_r6.i];
    [((android_graphics_Paint*) _r3.o) setTextSize___float:_r0.f];
    _r2.f = ((android_graphics_Paint*) _r3.o)->mInvCompatScaling_float;
    _r2.f = _r2.f * _r1.f;
    goto label8;
}


- (float) native_measureText___java_lang_String_int_int :(java_lang_String*)n1 :(int)n2 :(int)n3
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (float) measureText___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.o = n1;
    _r2.i = ((android_graphics_Paint*) _r3.o)->mHasCompatScaling_boolean;
    if (_r2.i != 0) goto label9;
    _r2.f = [((android_graphics_Paint*) _r3.o) native_measureText___java_lang_String:_r4.o];
    label8:;
    [_pool release];
    return _r2.f;
    label9:;
    _r0.f = [((android_graphics_Paint*) _r3.o) getTextSize__];
    _r2.f = ((android_graphics_Paint*) _r3.o)->mCompatScaling_float;
    _r2.f = _r2.f * _r0.f;
    [((android_graphics_Paint*) _r3.o) setTextSize___float:_r2.f];
    _r1.f = [((android_graphics_Paint*) _r3.o) native_measureText___java_lang_String:_r4.o];
    [((android_graphics_Paint*) _r3.o) setTextSize___float:_r0.f];
    _r2.f = ((android_graphics_Paint*) _r3.o)->mInvCompatScaling_float;
    _r2.f = _r2.f * _r1.f;
    goto label8;
}


- (float) native_measureText___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [((android_graphics_Paint*) _r1.o) xmlvmGetUIFont__];
    [_r0.o autorelease];
    _r0.o = [org_xmlvm_iphone_NSString sizeWithFont___java_lang_String_org_xmlvm_iphone_UIFont:_r2.o:_r0.o];
    [_r0.o autorelease];
    _r0.f = ((org_xmlvm_iphone_CGSize*) _r0.o)->width_float;
    [_pool release];
    return _r0.f;
}


- (int) breakText___char_ARRAYTYPE_int_int_float_float_ARRAYTYPE :(XMLVMArray*)n1 :(int)n2 :(int)n3 :(float)n4 :(XMLVMArray*)n5
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    XMLVMElem _r10;
    XMLVMElem _r11;
    XMLVMElem _r12;
    XMLVMElem _r13;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r8.o = self;
    _r9.o = n1;
    _r10.i = n2;
    _r11.i = n3;
    _r12.f = n4;
    _r13.o = n5;
    _r0.i = ((android_graphics_Paint*) _r8.o)->mHasCompatScaling_boolean;
    if (_r0.i != 0) goto label9;
    _r0.i = [((android_graphics_Paint*) _r8.o) native_breakText___char_ARRAYTYPE_int_int_float_float_ARRAYTYPE:_r9.o:_r10.i:_r11.i:_r12.f:_r13.o];
    label8:;
    [_pool release];
    return _r0.i;
    label9:;
    _r6.f = [((android_graphics_Paint*) _r8.o) getTextSize__];
    _r0.f = ((android_graphics_Paint*) _r8.o)->mCompatScaling_float;
    _r0.f = _r0.f * _r6.f;
    [((android_graphics_Paint*) _r8.o) setTextSize___float:_r0.f];
    _r0.f = ((android_graphics_Paint*) _r8.o)->mCompatScaling_float;
    _r4.f = _r12.f * _r0.f;
    _r0 = _r8;
    _r1 = _r9;
    _r2 = _r10;
    _r3 = _r11;
    _r5 = _r13;
    _r7.i = [((android_graphics_Paint*) _r0.o) native_breakText___char_ARRAYTYPE_int_int_float_float_ARRAYTYPE:_r1.o:_r2.i:_r3.i:_r4.f:_r5.o];
    [((android_graphics_Paint*) _r8.o) setTextSize___float:_r6.f];
    if (_r13.o == [NSNull null]) goto label45;
    _r0.i = 0;
    _r1.f = ((XMLVMArray*) _r13.o)->array.f[_r0.i];
    _r2.f = ((android_graphics_Paint*) _r8.o)->mInvCompatScaling_float;
    _r1.f = _r1.f * _r2.f;
    ((XMLVMArray*) _r13.o)->array.f[_r0.i] = _r1.f;
    label45:;
    _r0 = _r7;
    goto label8;
}


- (int) native_breakText___char_ARRAYTYPE_int_int_float_float_ARRAYTYPE :(XMLVMArray*)n1 :(int)n2 :(int)n3 :(float)n4 :(XMLVMArray*)n5
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) breakText___java_lang_String_boolean_float_float_ARRAYTYPE :(java_lang_String*)n1 :(int)n2 :(float)n3 :(XMLVMArray*)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r5.o = self;
    _r6.o = n1;
    _r7.i = n2;
    _r8.f = n3;
    _r9.o = n4;
    _r2.i = ((android_graphics_Paint*) _r5.o)->mHasCompatScaling_boolean;
    if (_r2.i != 0) goto label9;
    _r2.i = [((android_graphics_Paint*) _r5.o) native_breakText___java_lang_String_boolean_float_float_ARRAYTYPE:_r6.o:_r7.i:_r8.f:_r9.o];
    label8:;
    [_pool release];
    return _r2.i;
    label9:;
    _r0.f = [((android_graphics_Paint*) _r5.o) getTextSize__];
    _r2.f = ((android_graphics_Paint*) _r5.o)->mCompatScaling_float;
    _r2.f = _r2.f * _r0.f;
    [((android_graphics_Paint*) _r5.o) setTextSize___float:_r2.f];
    _r2.f = ((android_graphics_Paint*) _r5.o)->mCompatScaling_float;
    _r2.f = _r2.f * _r8.f;
    _r1.i = [((android_graphics_Paint*) _r5.o) native_breakText___java_lang_String_boolean_float_float_ARRAYTYPE:_r6.o:_r7.i:_r2.f:_r9.o];
    [((android_graphics_Paint*) _r5.o) setTextSize___float:_r0.f];
    if (_r9.o == [NSNull null]) goto label39;
    _r2.i = 0;
    _r3.f = ((XMLVMArray*) _r9.o)->array.f[_r2.i];
    _r4.f = ((android_graphics_Paint*) _r5.o)->mInvCompatScaling_float;
    _r3.f = _r3.f * _r4.f;
    ((XMLVMArray*) _r9.o)->array.f[_r2.i] = _r3.f;
    label39:;
    _r2 = _r1;
    goto label8;
}


- (int) native_breakText___java_lang_String_boolean_float_float_ARRAYTYPE :(java_lang_String*)n1 :(int)n2 :(float)n3 :(XMLVMArray*)n4
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) getTextWidths___char_ARRAYTYPE_int_int_float_ARRAYTYPE :(XMLVMArray*)n1 :(int)n2 :(int)n3 :(XMLVMArray*)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r5.o = self;
    _r6.o = n1;
    _r7.i = n2;
    _r8.i = n3;
    _r9.o = n4;
    _r3.i = _r7.i | _r8.i;
    if (_r3.i < 0) goto label12;
    _r3.i = _r7.i + _r8.i;
    _r4.i = [_r6.o count];
    if (_r3.i > _r4.i) goto label12;
    _r3.i = [_r9.o count];
    if (_r8.i <= _r3.i) goto label18;
    label12:;
    _r3.o = [[[java_lang_ArrayIndexOutOfBoundsException alloc] init] autorelease];
    [((java_lang_ArrayIndexOutOfBoundsException*) _r3.o) __init_java_lang_ArrayIndexOutOfBoundsException__];
    @throw _r3.o;
    label18:;
    _r3.i = ((android_graphics_Paint*) _r5.o)->mHasCompatScaling_boolean;
    if (_r3.i != 0) goto label27;
    _r3.i = [((android_graphics_Paint*) _r5.o) native_getTextWidths___char_ARRAYTYPE_int_int_float_ARRAYTYPE:_r6.o:_r7.i:_r8.i:_r9.o];
    label26:;
    [_pool release];
    return _r3.i;
    label27:;
    _r1.f = [((android_graphics_Paint*) _r5.o) getTextSize__];
    _r3.f = ((android_graphics_Paint*) _r5.o)->mCompatScaling_float;
    _r3.f = _r3.f * _r1.f;
    [((android_graphics_Paint*) _r5.o) setTextSize___float:_r3.f];
    _r2.i = [((android_graphics_Paint*) _r5.o) native_getTextWidths___char_ARRAYTYPE_int_int_float_ARRAYTYPE:_r6.o:_r7.i:_r8.i:_r9.o];
    [((android_graphics_Paint*) _r5.o) setTextSize___float:_r1.f];
    _r0.i = 0;
    label45:;
    if (_r0.i >= _r2.i) goto label57;
    _r3.f = ((XMLVMArray*) _r9.o)->array.f[_r0.i];
    _r4.f = ((android_graphics_Paint*) _r5.o)->mInvCompatScaling_float;
    _r3.f = _r3.f * _r4.f;
    ((XMLVMArray*) _r9.o)->array.f[_r0.i] = _r3.f;
    _r0.i = _r0.i + 1;
    goto label45;
    label57:;
    _r3 = _r2;
    goto label26;
}


- (int) getTextWidths___java_lang_String_int_int_float_ARRAYTYPE :(java_lang_String*)n1 :(int)n2 :(int)n3 :(XMLVMArray*)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r5.o = self;
    _r6.o = n1;
    _r7.i = n2;
    _r8.i = n3;
    _r9.o = n4;
    _r3.i = _r7.i | _r8.i;
    _r4.i = _r8.i - _r7.i;
    _r3.i = _r3.i | _r4.i;
    _r4.i = [((java_lang_String*) _r6.o) length__];
    _r4.i = _r4.i - _r8.i;
    _r3.i = _r3.i | _r4.i;
    if (_r3.i >= 0) goto label19;
    _r3.o = [[[java_lang_IndexOutOfBoundsException alloc] init] autorelease];
    [((java_lang_IndexOutOfBoundsException*) _r3.o) __init_java_lang_IndexOutOfBoundsException__];
    @throw _r3.o;
    label19:;
    _r3.i = _r8.i - _r7.i;
    _r4.i = [_r9.o count];
    if (_r3.i <= _r4.i) goto label30;
    _r3.o = [[[java_lang_ArrayIndexOutOfBoundsException alloc] init] autorelease];
    [((java_lang_ArrayIndexOutOfBoundsException*) _r3.o) __init_java_lang_ArrayIndexOutOfBoundsException__];
    @throw _r3.o;
    label30:;
    _r3.i = ((android_graphics_Paint*) _r5.o)->mHasCompatScaling_boolean;
    if (_r3.i != 0) goto label39;
    _r3.i = [((android_graphics_Paint*) _r5.o) native_getTextWidths___java_lang_String_int_int_float_ARRAYTYPE:_r6.o:_r7.i:_r8.i:_r9.o];
    label38:;
    [_pool release];
    return _r3.i;
    label39:;
    _r1.f = [((android_graphics_Paint*) _r5.o) getTextSize__];
    _r3.f = ((android_graphics_Paint*) _r5.o)->mCompatScaling_float;
    _r3.f = _r3.f * _r1.f;
    [((android_graphics_Paint*) _r5.o) setTextSize___float:_r3.f];
    _r2.i = [((android_graphics_Paint*) _r5.o) native_getTextWidths___java_lang_String_int_int_float_ARRAYTYPE:_r6.o:_r7.i:_r8.i:_r9.o];
    [((android_graphics_Paint*) _r5.o) setTextSize___float:_r1.f];
    _r0.i = 0;
    label57:;
    if (_r0.i >= _r2.i) goto label69;
    _r3.f = ((XMLVMArray*) _r9.o)->array.f[_r0.i];
    _r4.f = ((android_graphics_Paint*) _r5.o)->mInvCompatScaling_float;
    _r3.f = _r3.f * _r4.f;
    ((XMLVMArray*) _r9.o)->array.f[_r0.i] = _r3.f;
    _r0.i = _r0.i + 1;
    goto label57;
    label69:;
    _r3 = _r2;
    goto label38;
}


- (int) getTextWidths___java_lang_String_float_ARRAYTYPE :(java_lang_String*)n1 :(XMLVMArray*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r4.o = n2;
    _r0.i = 0;
    _r1.i = [((java_lang_String*) _r3.o) length__];
    _r0.i = [((android_graphics_Paint*) _r2.o) getTextWidths___java_lang_String_int_int_float_ARRAYTYPE:_r3.o:_r0.i:_r1.i:_r4.o];
    [_pool release];
    return _r0.i;
}


- (void) getTextBounds___java_lang_String_int_int_android_graphics_Rect :(java_lang_String*)n1 :(int)n2 :(int)n3 :(android_graphics_Rect*)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r4.i = n2;
    _r5.i = n3;
    _r6.o = n4;
    _r0.i = _r4.i | _r5.i;
    _r1.i = _r5.i - _r4.i;
    _r0.i = _r0.i | _r1.i;
    _r1.i = [((java_lang_String*) _r3.o) length__];
    _r1.i = _r1.i - _r5.i;
    _r0.i = _r0.i | _r1.i;
    if (_r0.i >= 0) goto label19;
    _r0.o = [[[java_lang_IndexOutOfBoundsException alloc] init] autorelease];
    [((java_lang_IndexOutOfBoundsException*) _r0.o) __init_java_lang_IndexOutOfBoundsException__];
    @throw _r0.o;
    label19:;
    if (_r6.o != [NSNull null]) goto label29;
    _r0.o = [[[java_lang_NullPointerException alloc] init] autorelease];
    _r1.o = @"need bounds Rect";
    [((java_lang_NullPointerException*) _r0.o) __init_java_lang_NullPointerException___java_lang_String:_r1.o];
    @throw _r0.o;
    label29:;
    [((android_graphics_Paint*) _r2.o) nativeGetStringBounds___java_lang_String_int_int_android_graphics_Rect:_r3.o:_r4.i:_r5.i:_r6.o];
    [_pool release];
    return;
}


- (void) getTextBounds___char_ARRAYTYPE_int_int_android_graphics_Rect :(XMLVMArray*)n1 :(int)n2 :(int)n3 :(android_graphics_Rect*)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r4.i = n2;
    _r5.i = n3;
    _r6.o = n4;
    _r0.i = _r4.i | _r5.i;
    if (_r0.i < 0) goto label9;
    _r0.i = _r4.i + _r5.i;
    _r1.i = [_r3.o count];
    if (_r0.i <= _r1.i) goto label15;
    label9:;
    _r0.o = [[[java_lang_ArrayIndexOutOfBoundsException alloc] init] autorelease];
    [((java_lang_ArrayIndexOutOfBoundsException*) _r0.o) __init_java_lang_ArrayIndexOutOfBoundsException__];
    @throw _r0.o;
    label15:;
    if (_r6.o != [NSNull null]) goto label25;
    _r0.o = [[[java_lang_NullPointerException alloc] init] autorelease];
    _r1.o = @"need bounds Rect";
    [((java_lang_NullPointerException*) _r0.o) __init_java_lang_NullPointerException___java_lang_String:_r1.o];
    @throw _r0.o;
    label25:;
    [((android_graphics_Paint*) _r2.o) nativeGetCharArrayBounds___char_ARRAYTYPE_int_int_android_graphics_Rect:_r3.o:_r4.i:_r5.i:_r6.o];
    [_pool release];
    return;
}


+ (int) native_init__
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_initWithPaint___int :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_reset___int :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_set___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_getStyle___int :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_setStyle___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_getStrokeCap___int :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_setStrokeCap___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_getStrokeJoin___int :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_setStrokeJoin___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_getFillPath___int_int_int :(int)n1 :(int)n2 :(int)n3
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_setShader___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_setColorFilter___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_setXfermode___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_setPathEffect___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_setMaskFilter___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_setTypeface___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_setRasterizer___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) native_getTextAlign___int :(int)n1
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_setTextAlign___int_int :(int)n1 :(int)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (float) native_getFontMetrics___int_android_graphics_Paint_FontMetrics :(int)n1 :(android_graphics_Paint_FontMetrics*)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) native_getTextWidths___char_ARRAYTYPE_int_int_float_ARRAYTYPE :(XMLVMArray*)n1 :(int)n2 :(int)n3 :(XMLVMArray*)n4
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (int) native_getTextWidths___java_lang_String_int_int_float_ARRAYTYPE :(java_lang_String*)n1 :(int)n2 :(int)n3 :(XMLVMArray*)n4
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_getTextPath___int_char_ARRAYTYPE_int_int_float_float_int :(int)n1 :(XMLVMArray*)n2 :(int)n3 :(int)n4 :(float)n5 :(float)n6 :(int)n7
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) native_getTextPath___int_java_lang_String_int_int_float_float_int :(int)n1 :(java_lang_String*)n2 :(int)n3 :(int)n4 :(float)n5 :(float)n6 :(int)n7
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) nativeGetStringBounds___java_lang_String_int_int_android_graphics_Rect :(java_lang_String*)n1 :(int)n2 :(int)n3 :(android_graphics_Rect*)n4
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (void) nativeGetCharArrayBounds___char_ARRAYTYPE_int_int_android_graphics_Rect :(XMLVMArray*)n1 :(int)n2 :(int)n3 :(android_graphics_Rect*)n4
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

- (org_xmlvm_iphone_UIFont*) xmlvmGetUIFont__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.o = [[((android_graphics_Paint*) _r2.o)->mTypeface_android_graphics_Typeface retain] autorelease];
    _r1.f = ((android_graphics_Paint*) _r2.o)->mTextSize_float;
    _r0.o = [((android_graphics_Typeface*) _r0.o) xmlvmGenUIFont___float:_r1.f];
    [_r0.o autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (XMLVMArray*) xmlvmGetColor__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r8.o = self;
    _r7.f = 255.0;
    _r5.i = ((android_graphics_Paint*) _r8.o)->mColor_int;
    _r5.i = _r5.i >> 24;
    _r0.i = _r5.i & 255;
    _r5.i = ((android_graphics_Paint*) _r8.o)->mColor_int;
    _r5.i = _r5.i >> 16;
    _r4.i = _r5.i & 255;
    _r5.i = ((android_graphics_Paint*) _r8.o)->mColor_int;
    _r5.i = _r5.i >> 8;
    _r3.i = _r5.i & 255;
    _r5.i = ((android_graphics_Paint*) _r8.o)->mColor_int;
    _r1.i = _r5.i & 255;
    _r5.i = 4;
    _r2.o = [XMLVMArray createSingleDimensionWithType:6 andSize:_r5.i];
    _r5.i = 0;
    _r6.f = (float) _r4.i;
    _r6.f = _r6.f / _r7.f;
    ((XMLVMArray*) _r2.o)->array.f[_r5.i] = _r6.f;
    _r5.i = 1;
    _r6.f = (float) _r3.i;
    _r6.f = _r6.f / _r7.f;
    ((XMLVMArray*) _r2.o)->array.f[_r5.i] = _r6.f;
    _r5.i = 2;
    _r6.f = (float) _r1.i;
    _r6.f = _r6.f / _r7.f;
    ((XMLVMArray*) _r2.o)->array.f[_r5.i] = _r6.f;
    _r5.i = 3;
    _r6.f = (float) _r0.i;
    _r6.f = _r6.f / _r7.f;
    ((XMLVMArray*) _r2.o)->array.f[_r5.i] = _r6.f;
    [_r2.o retain];
    [_pool release];
    return _r2.o;
}



@end

