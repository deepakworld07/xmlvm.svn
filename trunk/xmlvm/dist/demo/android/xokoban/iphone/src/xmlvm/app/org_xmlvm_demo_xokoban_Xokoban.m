#import "java_lang_Object.h"
#import "org_xmlvm_demo_xokoban_InfoView.h"
#import "android_hardware_SensorListener.h"
#import "java_lang_String.h"
#import "org_xmlvm_demo_xokoban_GameView.h"
#import "android_hardware_SensorManager.h"
#import "android_content_SharedPreferences_Editor.h"
#import "android_os_Bundle.h"
#import "android_os_PowerManager_WakeLock.h"
#import "org_xmlvm_demo_xokoban_GameController.h"
#import "android_view_Window.h"
#import "android_content_Context.h"
#import "org_xmlvm_demo_xokoban_InputController.h"
#import "android_content_SharedPreferences.h"
#import "android_os_PowerManager.h"
#import "android_view_View_OnTouchListener.h"
#import "org_xmlvm_demo_xokoban_SplashView.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_xmlvm_demo_xokoban_Xokoban.h"

java_lang_String* _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_LEVEL = @"level";
java_lang_String* _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_USERACCELEROMETER = @"useAccelerometer";
java_lang_String* _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_FIRSTRUN = @"firstRun";

@implementation org_xmlvm_demo_xokoban_Xokoban;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_xmlvm_demo_xokoban_Xokoban") == 0) {
        _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_LEVEL = (id) [NSNull null];
        _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_USERACCELEROMETER = (id) [NSNull null];
        _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_FIRSTRUN = (id) [NSNull null];
    }
}

- (id) init
{
    if (self = [super init]) {
        gameView_org_xmlvm_demo_xokoban_GameView = (id) [NSNull null];
        gameController_org_xmlvm_demo_xokoban_GameController = (id) [NSNull null];
        inputController_org_xmlvm_demo_xokoban_InputController = (id) [NSNull null];
        prefs_android_content_SharedPreferences = (id) [NSNull null];
        wakeLock_android_os_PowerManager_WakeLock = (id) [NSNull null];
        sensorManager_android_hardware_SensorManager = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [gameView_org_xmlvm_demo_xokoban_GameView release];
    [gameController_org_xmlvm_demo_xokoban_GameController release];
    [inputController_org_xmlvm_demo_xokoban_InputController release];
    [prefs_android_content_SharedPreferences release];
    [wakeLock_android_os_PowerManager_WakeLock release];
    [sensorManager_android_hardware_SensorManager release];
    [super dealloc];
}

+ (java_lang_String*) _GET_PREFKEY_LEVEL
{
    return [[_STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_LEVEL retain] autorelease];
}

+ (void) _PUT_PREFKEY_LEVEL: (java_lang_String*) v
{
    [v retain];
    [_STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_LEVEL release];
    _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_LEVEL = v;
}

+ (java_lang_String*) _GET_PREFKEY_USERACCELEROMETER
{
    return [[_STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_USERACCELEROMETER retain] autorelease];
}

+ (void) _PUT_PREFKEY_USERACCELEROMETER: (java_lang_String*) v
{
    [v retain];
    [_STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_USERACCELEROMETER release];
    _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_USERACCELEROMETER = v;
}

+ (java_lang_String*) _GET_PREFKEY_FIRSTRUN
{
    return [[_STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_FIRSTRUN retain] autorelease];
}

+ (void) _PUT_PREFKEY_FIRSTRUN: (java_lang_String*) v
{
    [v retain];
    [_STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_FIRSTRUN release];
    _STATIC_org_xmlvm_demo_xokoban_Xokoban_PREFKEY_FIRSTRUN = v;
}

- (void) __init_org_xmlvm_demo_xokoban_Xokoban__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    [((android_app_Activity*) _r0.o) __init_android_app_Activity__];
    [_pool release];
    return;
}


- (void) onCreate___android_os_Bundle :(android_os_Bundle*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r8.o = self;
    _r9.o = n1;
    _r7.i = 1024;
    _r5.i = 1;
    _r6.i = 0;
    [super onCreate___android_os_Bundle:_r9.o];
    _r3.o = [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o) getPreferences___int:_r6.i];
    [_r3.o autorelease];
    [_r3.o retain];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->prefs_android_content_SharedPreferences release];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->prefs_android_content_SharedPreferences = _r3.o;
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->prefs_android_content_SharedPreferences retain] autorelease];
    _r4.o = @"level";
    _r0.i = [((android_content_SharedPreferences*) _r3.o) getInt___java_lang_String_int:_r4.o:_r6.i];
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->prefs_android_content_SharedPreferences retain] autorelease];
    _r4.o = @"useAccelerometer";
    _r3.i = [((android_content_SharedPreferences*) _r3.o) getBoolean___java_lang_String_boolean:_r4.o:_r5.i];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->useAccelerometer_boolean = _r3.i;
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->prefs_android_content_SharedPreferences retain] autorelease];
    _r4.o = @"firstRun";
    _r3.i = [((android_content_SharedPreferences*) _r3.o) getBoolean___java_lang_String_boolean:_r4.o:_r5.i];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->firstRun_boolean = _r3.i;
    [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o) setDeviceNoSleep__];
    _r3.o = @"sensor";
    _r3.o = [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o) getSystemService___java_lang_String:_r3.o];
    [_r3.o autorelease];
    _r3.o = _r3.o;
    [_r3.o retain];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->sensorManager_android_hardware_SensorManager release];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->sensorManager_android_hardware_SensorManager = _r3.o;
    [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o) requestWindowFeature___int:_r5.i];
    _r3.o = [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o) getWindow__];
    [_r3.o autorelease];
    [((android_view_Window*) _r3.o) setFlags___int_int:_r7.i:_r7.i];
    _r3.o = [[[org_xmlvm_demo_xokoban_GameView alloc] init] autorelease];
    [((org_xmlvm_demo_xokoban_GameView*) _r3.o) __init_org_xmlvm_demo_xokoban_GameView___android_app_Activity:_r8.o];
    [_r3.o retain];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameView_org_xmlvm_demo_xokoban_GameView release];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameView_org_xmlvm_demo_xokoban_GameView = _r3.o;
    _r2.o = [[[org_xmlvm_demo_xokoban_SplashView alloc] init] autorelease];
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameView_org_xmlvm_demo_xokoban_GameView retain] autorelease];
    [((org_xmlvm_demo_xokoban_SplashView*) _r2.o) __init_org_xmlvm_demo_xokoban_SplashView___android_content_Context_org_xmlvm_demo_xokoban_GameView:_r8.o:_r3.o];
    _r1.o = [[[org_xmlvm_demo_xokoban_InfoView alloc] init] autorelease];
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameView_org_xmlvm_demo_xokoban_GameView retain] autorelease];
    [((org_xmlvm_demo_xokoban_InfoView*) _r1.o) __init_org_xmlvm_demo_xokoban_InfoView___android_content_Context_org_xmlvm_demo_xokoban_GameView:_r8.o:_r3.o];
    _r3.o = [[[org_xmlvm_demo_xokoban_GameController alloc] init] autorelease];
    _r4.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameView_org_xmlvm_demo_xokoban_GameView retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameController*) _r3.o) __init_org_xmlvm_demo_xokoban_GameController___org_xmlvm_demo_xokoban_GameView_org_xmlvm_demo_xokoban_SplashView_org_xmlvm_demo_xokoban_InfoView_int:_r4.o:_r2.o:_r1.o:_r0.i];
    [_r3.o retain];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameController_org_xmlvm_demo_xokoban_GameController release];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameController_org_xmlvm_demo_xokoban_GameController = _r3.o;
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameView_org_xmlvm_demo_xokoban_GameView retain] autorelease];
    _r4.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameController_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameView*) _r3.o) setGameController___org_xmlvm_demo_xokoban_GameController:_r4.o];
    _r3.o = [[[org_xmlvm_demo_xokoban_InputController alloc] init] autorelease];
    _r4.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameController_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_InputController*) _r3.o) __init_org_xmlvm_demo_xokoban_InputController___org_xmlvm_demo_xokoban_GameController:_r4.o];
    [_r3.o retain];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->inputController_org_xmlvm_demo_xokoban_InputController release];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->inputController_org_xmlvm_demo_xokoban_InputController = _r3.o;
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameView_org_xmlvm_demo_xokoban_GameView retain] autorelease];
    _r4.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->inputController_org_xmlvm_demo_xokoban_InputController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameView*) _r3.o) setOnTouchListener___android_view_View_OnTouchListener:_r4.o];
    _r3.i = ((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->useAccelerometer_boolean;
    if (_r3.i == 0) goto label129;
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->sensorManager_android_hardware_SensorManager retain] autorelease];
    _r4.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->inputController_org_xmlvm_demo_xokoban_InputController retain] autorelease];
    _r5.i = 2;
    [((android_hardware_SensorManager*) _r3.o) registerListener___android_hardware_SensorListener_int_int:_r4.o:_r5.i:_r6.i];
    label129:;
    _r3.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r8.o)->gameController_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameController*) _r3.o) showSplashScreen__];
    [_pool release];
    return;
}


- (void) setDeviceNoSleep__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r1.o = @"power";
    _r0.o = [((org_xmlvm_demo_xokoban_Xokoban*) _r3.o) getSystemService___java_lang_String:_r1.o];
    [_r0.o autorelease];
    _r0.o = _r0.o;
    _r1.i = 10;
    _r2.o = @"Xokoban";
    _r1.o = [((android_os_PowerManager*) _r0.o) newWakeLock___int_java_lang_String:_r1.i:_r2.o];
    [_r1.o autorelease];
    [_r1.o retain];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r3.o)->wakeLock_android_os_PowerManager_WakeLock release];
    ((org_xmlvm_demo_xokoban_Xokoban*) _r3.o)->wakeLock_android_os_PowerManager_WakeLock = _r1.o;
    _r1.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r3.o)->wakeLock_android_os_PowerManager_WakeLock retain] autorelease];
    [((android_os_PowerManager_WakeLock*) _r1.o) acquire__];
    [_pool release];
    return;
}


- (void) storeCurrentLevel__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r1.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r3.o)->prefs_android_content_SharedPreferences retain] autorelease];
    _r0.o = [((android_content_SharedPreferences*) _r1.o) edit__];
    [_r0.o autorelease];
    _r1.o = @"level";
    _r2.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r3.o)->gameController_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    _r2.i = [((org_xmlvm_demo_xokoban_GameController*) _r2.o) getCurrentLevel__];
    _res = [((android_content_SharedPreferences_Editor*) _r0.o) putInt___java_lang_String_int:_r1.o:_r2.i];
    [_res release];
    [((android_content_SharedPreferences_Editor*) _r0.o) commit__];
    [_pool release];
    return;
}


- (void) onDestroy__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    [((org_xmlvm_demo_xokoban_Xokoban*) _r1.o) storeCurrentLevel__];
    _r0.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r1.o)->wakeLock_android_os_PowerManager_WakeLock retain] autorelease];
    [((android_os_PowerManager_WakeLock*) _r0.o) release__];
    _r0.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r1.o)->gameController_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameController*) _r0.o) onDestroy__];
    [super onDestroy__];
    [_pool release];
    return;
}


- (void) enableAccelerometer__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r4.o = self;
    _r0.i = ((org_xmlvm_demo_xokoban_Xokoban*) _r4.o)->useAccelerometer_boolean;
    if (_r0.i != 0) goto label19;
    _r0.i = 1;
    ((org_xmlvm_demo_xokoban_Xokoban*) _r4.o)->useAccelerometer_boolean = _r0.i;
    _r0.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r4.o)->sensorManager_android_hardware_SensorManager retain] autorelease];
    _r1.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r4.o)->inputController_org_xmlvm_demo_xokoban_InputController retain] autorelease];
    _r2.i = 2;
    _r3.i = 0;
    [((android_hardware_SensorManager*) _r0.o) registerListener___android_hardware_SensorListener_int_int:_r1.o:_r2.i:_r3.i];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r4.o) storeAccelerometerUsage__];
    label19:;
    [_pool release];
    return;
}


- (void) disableAccelerometer__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.i = ((org_xmlvm_demo_xokoban_Xokoban*) _r2.o)->useAccelerometer_boolean;
    if (_r0.i == 0) goto label17;
    _r0.i = 0;
    ((org_xmlvm_demo_xokoban_Xokoban*) _r2.o)->useAccelerometer_boolean = _r0.i;
    _r0.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r2.o)->sensorManager_android_hardware_SensorManager retain] autorelease];
    _r1.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r2.o)->inputController_org_xmlvm_demo_xokoban_InputController retain] autorelease];
    [((android_hardware_SensorManager*) _r0.o) unregisterListener___android_hardware_SensorListener:_r1.o];
    [((org_xmlvm_demo_xokoban_Xokoban*) _r2.o) storeAccelerometerUsage__];
    label17:;
    [_pool release];
    return;
}


- (int) isAccelerometerEnabled__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = ((org_xmlvm_demo_xokoban_Xokoban*) _r1.o)->useAccelerometer_boolean;
    [_pool release];
    return _r0.i;
}


- (void) storeAccelerometerUsage__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r1.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r3.o)->prefs_android_content_SharedPreferences retain] autorelease];
    _r0.o = [((android_content_SharedPreferences*) _r1.o) edit__];
    [_r0.o autorelease];
    _r1.o = @"useAccelerometer";
    _r2.i = ((org_xmlvm_demo_xokoban_Xokoban*) _r3.o)->useAccelerometer_boolean;
    _res = [((android_content_SharedPreferences_Editor*) _r0.o) putBoolean___java_lang_String_boolean:_r1.o:_r2.i];
    [_res release];
    [((android_content_SharedPreferences_Editor*) _r0.o) commit__];
    [_pool release];
    return;
}


- (int) isFirstRun__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = ((org_xmlvm_demo_xokoban_Xokoban*) _r1.o)->firstRun_boolean;
    [_pool release];
    return _r0.i;
}


- (void) setFirstRun___boolean :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.i = n1;
    ((org_xmlvm_demo_xokoban_Xokoban*) _r2.o)->firstRun_boolean = _r3.i;
    _r1.o = [[((org_xmlvm_demo_xokoban_Xokoban*) _r2.o)->prefs_android_content_SharedPreferences retain] autorelease];
    _r0.o = [((android_content_SharedPreferences*) _r1.o) edit__];
    [_r0.o autorelease];
    _r1.o = @"firstRun";
    _res = [((android_content_SharedPreferences_Editor*) _r0.o) putBoolean___java_lang_String_boolean:_r1.o:_r3.i];
    [_res release];
    [((android_content_SharedPreferences_Editor*) _r0.o) commit__];
    [_pool release];
    return;
}



@end

