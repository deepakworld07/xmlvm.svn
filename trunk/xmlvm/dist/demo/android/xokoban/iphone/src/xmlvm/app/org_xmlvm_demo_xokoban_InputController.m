#import "android_hardware_SensorListener.h"
#import "android_view_View.h"
#import "android_view_MotionEvent.h"
#import "org_xmlvm_demo_xokoban_GameController.h"
#import "android_view_View_OnTouchListener.h"
#import "java_lang_Math.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_xmlvm_demo_xokoban_InputController.h"

float _STATIC_org_xmlvm_demo_xokoban_InputController_ACCELEROMETER_THRESHOLD = 2.0;
float _STATIC_org_xmlvm_demo_xokoban_InputController_SWIPE_THRESHOLD = 30.0;

@implementation org_xmlvm_demo_xokoban_InputController;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_xmlvm_demo_xokoban_InputController") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        controller_org_xmlvm_demo_xokoban_GameController = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [controller_org_xmlvm_demo_xokoban_GameController release];
    [super dealloc];
}

+ (float) _GET_ACCELEROMETER_THRESHOLD
{
    return _STATIC_org_xmlvm_demo_xokoban_InputController_ACCELEROMETER_THRESHOLD;
}

+ (void) _PUT_ACCELEROMETER_THRESHOLD: (float) v
{
    _STATIC_org_xmlvm_demo_xokoban_InputController_ACCELEROMETER_THRESHOLD = v;
}

+ (float) _GET_SWIPE_THRESHOLD
{
    return _STATIC_org_xmlvm_demo_xokoban_InputController_SWIPE_THRESHOLD;
}

+ (void) _PUT_SWIPE_THRESHOLD: (float) v
{
    _STATIC_org_xmlvm_demo_xokoban_InputController_SWIPE_THRESHOLD = v;
}

- (void) __init_org_xmlvm_demo_xokoban_InputController___org_xmlvm_demo_xokoban_GameController :(org_xmlvm_demo_xokoban_GameController*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    _r0.o = [NSNull null];
    [_r0.o retain];
    [((org_xmlvm_demo_xokoban_InputController*) _r1.o)->controller_org_xmlvm_demo_xokoban_GameController release];
    ((org_xmlvm_demo_xokoban_InputController*) _r1.o)->controller_org_xmlvm_demo_xokoban_GameController = _r0.o;
    _r0.i = 0;
    ((org_xmlvm_demo_xokoban_InputController*) _r1.o)->isFingerDown_boolean = _r0.i;
    [_r2.o retain];
    [((org_xmlvm_demo_xokoban_InputController*) _r1.o)->controller_org_xmlvm_demo_xokoban_GameController release];
    ((org_xmlvm_demo_xokoban_InputController*) _r1.o)->controller_org_xmlvm_demo_xokoban_GameController = _r2.o;
    [_pool release];
    return;
}


- (void) onSensorChanged___int_float_ARRAYTYPE :(int)n1 :(XMLVMArray*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.i = n1;
    _r5.o = n2;
    _r2.o = [[((org_xmlvm_demo_xokoban_InputController*) _r3.o)->controller_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    _r2.i = [((org_xmlvm_demo_xokoban_GameController*) _r2.o) isGamePaused__];
    if (_r2.i != 0) goto label12;
    _r2.i = ((org_xmlvm_demo_xokoban_InputController*) _r3.o)->isFingerDown_boolean;
    if (_r2.i == 0) goto label13;
    label12:;
    [_pool release];
    return;
    label13:;
    _r2.i = 0;
    _r0.f = ((XMLVMArray*) _r5.o)->array.f[_r2.i];
    _r2.i = 1;
    _r2.f = ((XMLVMArray*) _r5.o)->array.f[_r2.i];
    _r1.f = -_r2.f;
    _r2.o = [[((org_xmlvm_demo_xokoban_InputController*) _r3.o)->controller_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameController*) _r2.o) setMovingSpeed___float_float:_r0.f:_r1.f];
    _r2.f = 2.0;
    _r2.i = [((org_xmlvm_demo_xokoban_InputController*) _r3.o) moveWithInput___float_float_float:_r0.f:_r1.f:_r2.f];
    if (_r2.i != 0) goto label12;
    _r2.o = [[((org_xmlvm_demo_xokoban_InputController*) _r3.o)->controller_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameController*) _r2.o) scheduleStopMan__];
    goto label12;
}


- (int) moveWithInput___float_float_float :(float)n1 :(float)n2 :(float)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r5.o = self;
    _r6.f = n1;
    _r7.f = n2;
    _r8.f = n3;
    _r4.i = 0;
    _r2.o = [[((org_xmlvm_demo_xokoban_InputController*) _r5.o)->controller_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    _r2.i = [((org_xmlvm_demo_xokoban_GameController*) _r2.o) isGamePaused__];
    if (_r2.i == 0) goto label11;
    _r2 = _r4;
    label10:;
    [_pool release];
    return _r2.i;
    label11:;
    _r0.i = 0;
    _r1.i = 0;
    _r2.f = [java_lang_Math abs___float:_r6.f];
    _r3.f = [java_lang_Math abs___float:_r7.f];
    _r2.i = _r2.f > _r3.f ? 1 : (_r2.f == _r3.f ? 0 : -1);
    if (_r2.i <= 0) goto label55;
    _r2.i = _r6.f > _r8.f ? 1 : (_r6.f == _r8.f ? 0 : -1);
    if (_r2.i <= 0) goto label30;
    _r0.i = 1;
    label30:;
    _r2.f = -_r8.f;
    _r2.i = _r6.f > _r2.f ? 1 : (_r6.f == _r2.f ? 0 : -1);
    if (_r2.i >= 0) goto label36;
    _r0.i = -1;
    label36:;
    _r2.i = [java_lang_Math abs___int:_r0.i];
    if (_r2.i > 0) goto label48;
    _r2.i = [java_lang_Math abs___int:_r1.i];
    if (_r2.i <= 0) goto label67;
    label48:;
    _r2.o = [[((org_xmlvm_demo_xokoban_InputController*) _r5.o)->controller_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameController*) _r2.o) scheduleMoveMan___int_int:_r0.i:_r1.i];
    _r2.i = 1;
    goto label10;
    label55:;
    _r2.i = _r7.f > _r8.f ? 1 : (_r7.f == _r8.f ? 0 : -1);
    if (_r2.i <= 0) goto label60;
    _r1.i = 1;
    label60:;
    _r2.f = -_r8.f;
    _r2.i = _r7.f > _r2.f ? 1 : (_r7.f == _r2.f ? 0 : -1);
    if (_r2.i >= 0) goto label36;
    _r1.i = -1;
    goto label36;
    label67:;
    _r2 = _r4;
    goto label10;
}


- (void) onAccuracyChanged___int_int :(int)n1 :(int)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.i = n1;
    _r2.i = n2;
    [_pool release];
    return;
}


- (int) onTouch___android_view_View_android_view_MotionEvent :(android_view_View*)n1 :(android_view_MotionEvent*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r5.o = self;
    _r6.o = n1;
    _r7.o = n2;
    _r4.i = 0;
    _r3.i = 1;
    _r0.i = [((android_view_MotionEvent*) _r7.o) getAction__];
    if (_r0.i != 0) goto label25;
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->isFingerDown_boolean = _r3.i;
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->couldBeTap_boolean = _r3.i;
    _r0.f = [((android_view_MotionEvent*) _r7.o) getX__];
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastStartX_float = _r0.f;
    _r0.f = [((android_view_MotionEvent*) _r7.o) getY__];
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastStartY_float = _r0.f;
    label24:;
    [_pool release];
    return _r3.i;
    label25:;
    _r0.i = [((android_view_MotionEvent*) _r7.o) getAction__];
    if (_r0.i != _r3.i) goto label56;
    _r0.o = [[((org_xmlvm_demo_xokoban_InputController*) _r5.o)->controller_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    [((org_xmlvm_demo_xokoban_GameController*) _r0.o) scheduleStopMan__];
    _r0.i = ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->couldBeTap_boolean;
    if (_r0.i == 0) goto label53;
    _r0.o = [[((org_xmlvm_demo_xokoban_InputController*) _r5.o)->controller_org_xmlvm_demo_xokoban_GameController retain] autorelease];
    _r1.f = [((android_view_MotionEvent*) _r7.o) getX__];
    _r2.f = [((android_view_MotionEvent*) _r7.o) getY__];
    [((org_xmlvm_demo_xokoban_GameController*) _r0.o) onTap___float_float:_r1.f:_r2.f];
    label53:;
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->isFingerDown_boolean = _r4.i;
    goto label24;
    label56:;
    _r0.i = [((android_view_MotionEvent*) _r7.o) getAction__];
    _r1.i = 2;
    if (_r0.i != _r1.i) goto label24;
    _r0.f = [((android_view_MotionEvent*) _r7.o) getX__];
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastMoveX_float = _r0.f;
    _r0.f = [((android_view_MotionEvent*) _r7.o) getY__];
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastMoveY_float = _r0.f;
    _r0.f = ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastMoveX_float;
    _r1.f = ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastStartX_float;
    _r0.f = _r0.f - _r1.f;
    _r1.f = ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastMoveY_float;
    _r2.f = ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastStartY_float;
    _r1.f = _r1.f - _r2.f;
    _r2.f = 30.0;
    _r0.i = [((org_xmlvm_demo_xokoban_InputController*) _r5.o) moveWithInput___float_float_float:_r0.f:_r1.f:_r2.f];
    if (_r0.i == 0) goto label24;
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->couldBeTap_boolean = _r4.i;
    _r0.f = ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastMoveX_float;
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastStartX_float = _r0.f;
    _r0.f = ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastMoveY_float;
    ((org_xmlvm_demo_xokoban_InputController*) _r5.o)->lastStartY_float = _r0.f;
    goto label24;
}



@end

