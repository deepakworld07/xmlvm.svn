#import "xmlvm.h"
#import "android_app_Activity.h"

// For circular include:
@class java_lang_Object;
@class org_xmlvm_demo_xokoban_InfoView;
@class android_hardware_SensorListener;
@class java_lang_String;
@class org_xmlvm_demo_xokoban_GameView;
@class android_hardware_SensorManager;
@class android_content_SharedPreferences_Editor;
@class android_os_Bundle;
@class android_os_PowerManager_WakeLock;
@class org_xmlvm_demo_xokoban_GameController;
@class android_view_Window;
@class org_xmlvm_demo_xokoban_Xokoban;
@class android_content_Context;
@class android_app_Activity;
@class org_xmlvm_demo_xokoban_InputController;
@class android_content_SharedPreferences;
@class android_os_PowerManager;
@class android_view_View_OnTouchListener;
@class org_xmlvm_demo_xokoban_SplashView;

// Automatically generated by xmlvm2obj. Do not edit!


	
@interface org_xmlvm_demo_xokoban_Xokoban : android_app_Activity
{
@public org_xmlvm_demo_xokoban_GameView* gameView_org_xmlvm_demo_xokoban_GameView;
@public org_xmlvm_demo_xokoban_GameController* gameController_org_xmlvm_demo_xokoban_GameController;
@public org_xmlvm_demo_xokoban_InputController* inputController_org_xmlvm_demo_xokoban_InputController;
@public android_content_SharedPreferences* prefs_android_content_SharedPreferences;
@public android_os_PowerManager_WakeLock* wakeLock_android_os_PowerManager_WakeLock;
@public android_hardware_SensorManager* sensorManager_android_hardware_SensorManager;
@public int useAccelerometer_boolean;
@public int firstRun_boolean;

}
+ (void) initialize;
- (id) init;
+ (java_lang_String*) _GET_PREFKEY_LEVEL;
+ (void) _PUT_PREFKEY_LEVEL: (java_lang_String*) v;
+ (java_lang_String*) _GET_PREFKEY_USERACCELEROMETER;
+ (void) _PUT_PREFKEY_USERACCELEROMETER: (java_lang_String*) v;
+ (java_lang_String*) _GET_PREFKEY_FIRSTRUN;
+ (void) _PUT_PREFKEY_FIRSTRUN: (java_lang_String*) v;
- (void) __init_org_xmlvm_demo_xokoban_Xokoban__;
- (void) onCreate___android_os_Bundle :(android_os_Bundle*)n1;
- (void) setDeviceNoSleep__;
- (void) storeCurrentLevel__;
- (void) onDestroy__;
- (void) enableAccelerometer__;
- (void) disableAccelerometer__;
- (int) isAccelerometerEnabled__;
- (void) storeAccelerometerUsage__;
- (int) isFirstRun__;
- (void) setFirstRun___boolean :(int)n1;

@end

