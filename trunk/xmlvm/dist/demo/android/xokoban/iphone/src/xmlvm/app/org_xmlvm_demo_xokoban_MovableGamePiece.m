#import "org_xmlvm_demo_xokoban_GamePieceMover.h"
#import "org_xmlvm_demo_xokoban_GameView.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "org_xmlvm_demo_xokoban_MovableGamePiece.h"


@implementation org_xmlvm_demo_xokoban_MovableGamePiece;

+ (void) initialize
{
    if (strcmp(class_getName(self), "org_xmlvm_demo_xokoban_MovableGamePiece") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    [super dealloc];
}

- (void) __init_org_xmlvm_demo_xokoban_MovableGamePiece___org_xmlvm_demo_xokoban_GameView_int_int_int_int :(org_xmlvm_demo_xokoban_GameView*)n1 :(int)n2 :(int)n3 :(int)n4 :(int)n5
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    XMLVMElem _r10;
    XMLVMElem _r11;
    XMLVMElem _r12;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r7.o = self;
    _r8.o = n1;
    _r9.i = n2;
    _r10.i = n3;
    _r11.i = n4;
    _r12.i = n5;
    _r6.i = 1;
    _r0 = _r7;
    _r1 = _r8;
    _r2 = _r9;
    _r3 = _r10;
    _r4 = _r11;
    _r5 = _r12;
    [((org_xmlvm_demo_xokoban_GamePiece*) _r0.o) __init_org_xmlvm_demo_xokoban_GamePiece___org_xmlvm_demo_xokoban_GameView_int_int_int_int_boolean:_r1.o:_r2.i:_r3.i:_r4.i:_r5.i:_r6.i];
    [_pool release];
    return;
}


- (void) startMoving___int_int :(int)n1 :(int)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.i = n1;
    _r4.i = n2;
    _r1.i = 0;
    _r0.o = [[((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->view_org_xmlvm_demo_xokoban_GameView retain] autorelease];
    _r0.o = [((org_xmlvm_demo_xokoban_GameView*) _r0.o) getMover__];
    [_r0.o autorelease];
    [((org_xmlvm_demo_xokoban_GamePieceMover*) _r0.o) moveGamePiece___org_xmlvm_demo_xokoban_MovableGamePiece:_r2.o];
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->dx_int = _r3.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->dy_int = _r4.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->px_int = _r1.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->py_int = _r1.i;
    _r0.i = 2;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->animationFactor_int = _r0.i;
    _r0.i = [((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o) getTileSize__];
    _r1.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->animationFactor_int;
    _r0.i = _r0.i / _r1.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r2.o)->counter_int = _r0.i;
    [_pool release];
    return;
}


- (int) moveOneStep__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r4.o = self;
    _r3.i = 1;
    _r0.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->px_int;
    _r1.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->dx_int;
    _r2.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->animationFactor_int;
    _r1.i = _r1.i * _r2.i;
    _r0.i = _r0.i + _r1.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->px_int = _r0.i;
    _r0.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->py_int;
    _r1.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->dy_int;
    _r2.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->animationFactor_int;
    _r1.i = _r1.i * _r2.i;
    _r0.i = _r0.i + _r1.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->py_int = _r0.i;
    _r0.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->px_int;
    _r1.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->py_int;
    [((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o) updatePosition___int_int:_r0.i:_r1.i];
    _r0.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->counter_int;
    _r0.i = _r0.i - _r3.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->counter_int = _r0.i;
    _r0.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->counter_int;
    if (_r0.i != 0) goto label53;
    _r0.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->x_int;
    _r1.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->dx_int;
    _r0.i = _r0.i + _r1.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->x_int = _r0.i;
    _r0.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->y_int;
    _r1.i = ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->dy_int;
    _r0.i = _r0.i + _r1.i;
    ((org_xmlvm_demo_xokoban_MovableGamePiece*) _r4.o)->y_int = _r0.i;
    _r0 = _r3;
    label52:;
    [_pool release];
    return _r0.i;
    label53:;
    _r0.i = 0;
    goto label52;
}


- (int) isMoving__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((org_xmlvm_demo_xokoban_MovableGamePiece*) _r1.o)->view_org_xmlvm_demo_xokoban_GameView retain] autorelease];
    _r0.o = [((org_xmlvm_demo_xokoban_GameView*) _r0.o) getMover__];
    [_r0.o autorelease];
    _r0.i = [((org_xmlvm_demo_xokoban_GamePieceMover*) _r0.o) isMoving__];
    [_pool release];
    return _r0.i;
}



@end

