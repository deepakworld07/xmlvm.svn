#import "android_media_MediaPlayer_AudioPlayerDelegate.h"
#import "java_lang_String.h"
#import "org_xmlvm_iphone_NSErrorHolder.h"
#import "java_lang_IllegalStateException.h"
#import "java_io_IOException.h"
#import "org_xmlvm_iphone_AVAudioPlayerDelegate.h"
#import "java_io_FileDescriptor.h"
#import "android_media_MediaPlayer_OnCompletionListener.h"
#import "java_lang_Math.h"
#import "org_xmlvm_iphone_AVAudioPlayer.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_media_MediaPlayer.h"


@implementation android_media_MediaPlayer;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_media_MediaPlayer") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        onCompletionListener_android_media_MediaPlayer_OnCompletionListener = (id) [NSNull null];
        player_org_xmlvm_iphone_AVAudioPlayer = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [onCompletionListener_android_media_MediaPlayer_OnCompletionListener release];
    [player_org_xmlvm_iphone_AVAudioPlayer release];
    [super dealloc];
}

- (void) __init_android_media_MediaPlayer__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [NSNull null];
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    [_r0.o retain];
    [((android_media_MediaPlayer*) _r1.o)->onCompletionListener_android_media_MediaPlayer_OnCompletionListener release];
    ((android_media_MediaPlayer*) _r1.o)->onCompletionListener_android_media_MediaPlayer_OnCompletionListener = _r0.o;
    [_r0.o retain];
    [((android_media_MediaPlayer*) _r1.o)->player_org_xmlvm_iphone_AVAudioPlayer release];
    ((android_media_MediaPlayer*) _r1.o)->player_org_xmlvm_iphone_AVAudioPlayer = _r0.o;
    _r0.i = 0;
    ((android_media_MediaPlayer*) _r1.o)->looping_boolean = _r0.i;
    [_pool release];
    return;
}


- (int) isPlaying__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_media_MediaPlayer*) _r1.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o == [NSNull null]) goto label14;
    _r0.o = [[((android_media_MediaPlayer*) _r1.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    _r0.i = [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) isPlaying__];
    if (_r0.i == 0) goto label14;
    _r0.i = 1;
    label13:;
    [_pool release];
    return _r0.i;
    label14:;
    _r0.i = 0;
    goto label13;
}


- (void) setDataSource___java_io_FileDescriptor_long_long :(java_io_FileDescriptor*)n1 :(long)n2 :(long)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    XMLVMElem _r10;
    XMLVMElem _r11;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r6.o = self;
    _r7.o = n1;
    _r8.l = n2;
    _r10.l = n3;
    _r5.o = [[[org_xmlvm_iphone_NSErrorHolder alloc] init] autorelease];
    [((org_xmlvm_iphone_NSErrorHolder*) _r5.o) __init_org_xmlvm_iphone_NSErrorHolder__];
    _r0 = _r7;
    _r1 = _r8;
    _r3 = _r10;
    _r0.o = [org_xmlvm_iphone_AVAudioPlayer initWithContentsOfFileDescriptor___java_io_FileDescriptor_long_long_org_xmlvm_iphone_NSErrorHolder:_r0.o:_r1.l:_r3.l:_r5.o];
    [_r0.o autorelease];
    [_r0.o retain];
    [((android_media_MediaPlayer*) _r6.o)->player_org_xmlvm_iphone_AVAudioPlayer release];
    ((android_media_MediaPlayer*) _r6.o)->player_org_xmlvm_iphone_AVAudioPlayer = _r0.o;
    _r0.o = [[((android_media_MediaPlayer*) _r6.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o != [NSNull null]) goto label28;
    _r0.o = [[[java_io_IOException alloc] init] autorelease];
    _r1.o = [((org_xmlvm_iphone_NSErrorHolder*) _r5.o) description__];
    [_r1.o autorelease];
    [((java_io_IOException*) _r0.o) __init_java_io_IOException___java_lang_String:_r1.o];
    @throw _r0.o;
    label28:;
    _r0.o = [[((android_media_MediaPlayer*) _r6.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    _r1.i = ((android_media_MediaPlayer*) _r6.o)->looping_boolean;
    if (_r1.i == 0) goto label49;
    _r1.i = -1;
    label35:;
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) setNumberOfLoops___int:_r1.i];
    _r0.o = [[((android_media_MediaPlayer*) _r6.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    _r1.o = [[[android_media_MediaPlayer_AudioPlayerDelegate alloc] init] autorelease];
    [((android_media_MediaPlayer_AudioPlayerDelegate*) _r1.o) __init_android_media_MediaPlayer_AudioPlayerDelegate___android_media_MediaPlayer_android_media_MediaPlayer:_r6.o:_r6.o];
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) setDelegate___org_xmlvm_iphone_AVAudioPlayerDelegate:_r1.o];
    [_pool release];
    return;
    label49:;
    _r1.i = 0;
    goto label35;
}


- (void) setAudioStreamType___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.i = n1;
    [_pool release];
    return;
}


- (void) prepare__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o != [NSNull null]) goto label12;
    _r0.o = [[[java_lang_IllegalStateException alloc] init] autorelease];
    _r1.o = @"Player not initialized";
    [((java_lang_IllegalStateException*) _r0.o) __init_java_lang_IllegalStateException___java_lang_String:_r1.o];
    @throw _r0.o;
    label12:;
    [_pool release];
    return;
}


- (void) setLooping___boolean :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.i = n1;
    ((android_media_MediaPlayer*) _r2.o)->looping_boolean = _r3.i;
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o == [NSNull null]) goto label14;
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r3.i == 0) goto label15;
    _r1.i = -1;
    label11:;
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) setNumberOfLoops___int:_r1.i];
    label14:;
    [_pool release];
    return;
    label15:;
    _r1.i = 0;
    goto label11;
}


- (void) setVolume___float_float :(float)n1 :(float)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.f = n1;
    _r5.f = n2;
    _r0.o = [[((android_media_MediaPlayer*) _r3.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o == [NSNull null]) goto label15;
    _r0.o = [[((android_media_MediaPlayer*) _r3.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    _r1.f = _r4.f + _r5.f;
    _r2.f = 2.0;
    _r1.f = _r1.f / _r2.f;
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) setVolume___float:_r1.f];
    [_pool release];
    return;
    label15:;
    _r0.o = [[[java_lang_IllegalStateException alloc] init] autorelease];
    _r1.o = @"Player not initialized";
    [((java_lang_IllegalStateException*) _r0.o) __init_java_lang_IllegalStateException___java_lang_String:_r1.o];
    @throw _r0.o;
}


- (void) start__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o == [NSNull null]) goto label10;
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) play__];
    [_pool release];
    return;
    label10:;
    _r0.o = [[[java_lang_IllegalStateException alloc] init] autorelease];
    _r1.o = @"Player not initialized";
    [((java_lang_IllegalStateException*) _r0.o) __init_java_lang_IllegalStateException___java_lang_String:_r1.o];
    @throw _r0.o;
}


- (void) stop__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r0.o = [[((android_media_MediaPlayer*) _r3.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o == [NSNull null]) goto label17;
    _r0.o = [[((android_media_MediaPlayer*) _r3.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    _r1.d = 0.0;
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) setCurrentTime___double:_r1.d];
    _r0.o = [[((android_media_MediaPlayer*) _r3.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) stop__];
    [_pool release];
    return;
    label17:;
    _r0.o = [[[java_lang_IllegalStateException alloc] init] autorelease];
    _r1.o = @"Player not initialized";
    [((java_lang_IllegalStateException*) _r0.o) __init_java_lang_IllegalStateException___java_lang_String:_r1.o];
    @throw _r0.o;
}


- (void) pause__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o == [NSNull null]) goto label10;
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) stop__];
    [_pool release];
    return;
    label10:;
    _r0.o = [[[java_lang_IllegalStateException alloc] init] autorelease];
    _r1.o = @"Player not initialized";
    [((java_lang_IllegalStateException*) _r0.o) __init_java_lang_IllegalStateException___java_lang_String:_r1.o];
    @throw _r0.o;
}


- (void) seekTo___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.i = n1;
    _r0.o = [[((android_media_MediaPlayer*) _r3.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    if (_r0.o == [NSNull null]) goto label18;
    _r0.o = [[((android_media_MediaPlayer*) _r3.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    _r1.i = _r4.i / 1000;
    _r1.f = (float) _r1.i;
    _r1.i = [java_lang_Math round___float:_r1.f];
    _r1.d = (double) _r1.i;
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) setCurrentTime___double:_r1.d];
    [_pool release];
    return;
    label18:;
    _r0.o = [[[java_lang_IllegalStateException alloc] init] autorelease];
    _r1.o = @"Player not initialized";
    [((java_lang_IllegalStateException*) _r0.o) __init_java_lang_IllegalStateException___java_lang_String:_r1.o];
    @throw _r0.o;
}


- (void) release__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r1.o = [NSNull null];
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) stop__];
    _r0.o = [[((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer retain] autorelease];
    [((org_xmlvm_iphone_AVAudioPlayer*) _r0.o) setDelegate___org_xmlvm_iphone_AVAudioPlayerDelegate:_r1.o];
    [_r1.o retain];
    [((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer release];
    ((android_media_MediaPlayer*) _r2.o)->player_org_xmlvm_iphone_AVAudioPlayer = _r1.o;
    [_pool release];
    return;
}


- (void) setOnCompletionListener___android_media_MediaPlayer_OnCompletionListener :(android_media_MediaPlayer_OnCompletionListener*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_r1.o retain];
    [((android_media_MediaPlayer*) _r0.o)->onCompletionListener_android_media_MediaPlayer_OnCompletionListener release];
    ((android_media_MediaPlayer*) _r0.o)->onCompletionListener_android_media_MediaPlayer_OnCompletionListener = _r1.o;
    [_pool release];
    return;
}


+ (android_media_MediaPlayer_OnCompletionListener*) access$000___android_media_MediaPlayer :(android_media_MediaPlayer*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = n1;
    _r0.o = [[((android_media_MediaPlayer*) _r1.o)->onCompletionListener_android_media_MediaPlayer_OnCompletionListener retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}



@end

