#import "java_lang_IllegalArgumentException.h"
#import "android_util_Poolable.h"
#import "android_util_Pool.h"
#import "java_lang_String.h"
#import "android_util_PoolableManager.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_util_FinitePool.h"


@implementation android_util_FinitePool;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_util_FinitePool") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        mManager_android_util_PoolableManager = (id) [NSNull null];
        mRoot_android_util_Poolable = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [mManager_android_util_PoolableManager release];
    [mRoot_android_util_Poolable release];
    [super dealloc];
}

- (void) __init_android_util_FinitePool___android_util_PoolableManager :(android_util_PoolableManager*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    [_r2.o retain];
    [((android_util_FinitePool*) _r1.o)->mManager_android_util_PoolableManager release];
    ((android_util_FinitePool*) _r1.o)->mManager_android_util_PoolableManager = _r2.o;
    _r0.i = 0;
    ((android_util_FinitePool*) _r1.o)->mLimit_int = _r0.i;
    _r0.i = 1;
    ((android_util_FinitePool*) _r1.o)->mInfinite_boolean = _r0.i;
    [_pool release];
    return;
}


- (void) __init_android_util_FinitePool___android_util_PoolableManager_int :(android_util_PoolableManager*)n1 :(int)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r4.i = n2;
    [((java_lang_Object*) _r2.o) __init_java_lang_Object__];
    if (_r4.i > 0) goto label13;
    _r0.o = [[[java_lang_IllegalArgumentException alloc] init] autorelease];
    _r1.o = @"The pool limit must be > 0";
    [((java_lang_IllegalArgumentException*) _r0.o) __init_java_lang_IllegalArgumentException___java_lang_String:_r1.o];
    @throw _r0.o;
    label13:;
    [_r3.o retain];
    [((android_util_FinitePool*) _r2.o)->mManager_android_util_PoolableManager release];
    ((android_util_FinitePool*) _r2.o)->mManager_android_util_PoolableManager = _r3.o;
    ((android_util_FinitePool*) _r2.o)->mLimit_int = _r4.i;
    _r0.i = 0;
    ((android_util_FinitePool*) _r2.o)->mInfinite_boolean = _r0.i;
    [_pool release];
    return;
}


- (android_util_Poolable*) acquire__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r1.o = [[((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable retain] autorelease];
    if (_r1.o == [NSNull null]) goto label32;
    _r0.o = [[((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable retain] autorelease];
    _r1.o = [((android_util_Poolable*) _r0.o) getNextPoolable__];
    [_r1.o autorelease];
    _r1.o = _r1.o;
    [_r1.o retain];
    [((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable release];
    ((android_util_FinitePool*) _r3.o)->mRoot_android_util_Poolable = _r1.o;
    _r1.i = ((android_util_FinitePool*) _r3.o)->mPoolCount_int;
    _r2.i = 1;
    _r1.i = _r1.i - _r2.i;
    ((android_util_FinitePool*) _r3.o)->mPoolCount_int = _r1.i;
    label20:;
    if (_r0.o == [NSNull null]) goto label31;
    _r1.o = [NSNull null];
    [((android_util_Poolable*) _r0.o) setNextPoolable___java_lang_Object:_r1.o];
    _r1.o = [[((android_util_FinitePool*) _r3.o)->mManager_android_util_PoolableManager retain] autorelease];
    [((android_util_PoolableManager*) _r1.o) onAcquired___android_util_Poolable:_r0.o];
    label31:;
    [_r0.o retain];
    [_pool release];
    return _r0.o;
    label32:;
    _r1.o = [[((android_util_FinitePool*) _r3.o)->mManager_android_util_PoolableManager retain] autorelease];
    _r0.o = [((android_util_PoolableManager*) _r1.o) newInstance__];
    [_r0.o autorelease];
    goto label20;
}


- (void) release___android_util_Poolable :(android_util_Poolable*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r0.i = ((android_util_FinitePool*) _r2.o)->mInfinite_boolean;
    if (_r0.i != 0) goto label10;
    _r0.i = ((android_util_FinitePool*) _r2.o)->mPoolCount_int;
    _r1.i = ((android_util_FinitePool*) _r2.o)->mLimit_int;
    if (_r0.i >= _r1.i) goto label23;
    label10:;
    _r0.i = ((android_util_FinitePool*) _r2.o)->mPoolCount_int;
    _r0.i = _r0.i + 1;
    ((android_util_FinitePool*) _r2.o)->mPoolCount_int = _r0.i;
    _r0.o = [[((android_util_FinitePool*) _r2.o)->mRoot_android_util_Poolable retain] autorelease];
    [((android_util_Poolable*) _r3.o) setNextPoolable___java_lang_Object:_r0.o];
    [_r3.o retain];
    [((android_util_FinitePool*) _r2.o)->mRoot_android_util_Poolable release];
    ((android_util_FinitePool*) _r2.o)->mRoot_android_util_Poolable = _r3.o;
    label23:;
    _r0.o = [[((android_util_FinitePool*) _r2.o)->mManager_android_util_PoolableManager retain] autorelease];
    [((android_util_PoolableManager*) _r0.o) onReleased___android_util_Poolable:_r3.o];
    [_pool release];
    return;
}



@end

