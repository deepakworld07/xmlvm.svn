#import "android_hardware_Sensor.h"
#import "android_hardware_SensorEventListener.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_hardware_RegisteredEventListener.h"


@implementation android_hardware_RegisteredEventListener;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_hardware_RegisteredEventListener") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        listener_android_hardware_SensorEventListener = (id) [NSNull null];
        sensor_android_hardware_Sensor = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [listener_android_hardware_SensorEventListener release];
    [sensor_android_hardware_Sensor release];
    [super dealloc];
}

- (void) __init_android_hardware_RegisteredEventListener___android_hardware_SensorEventListener_android_hardware_Sensor_int :(android_hardware_SensorEventListener*)n1 :(android_hardware_Sensor*)n2 :(int)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r3.o = n2;
    _r4.i = n3;
    _r0.o = [NSNull null];
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    [_r0.o retain];
    [((android_hardware_RegisteredEventListener*) _r1.o)->listener_android_hardware_SensorEventListener release];
    ((android_hardware_RegisteredEventListener*) _r1.o)->listener_android_hardware_SensorEventListener = _r0.o;
    [_r0.o retain];
    [((android_hardware_RegisteredEventListener*) _r1.o)->sensor_android_hardware_Sensor release];
    ((android_hardware_RegisteredEventListener*) _r1.o)->sensor_android_hardware_Sensor = _r0.o;
    _r0.i = 0;
    ((android_hardware_RegisteredEventListener*) _r1.o)->rate_int = _r0.i;
    [_r2.o retain];
    [((android_hardware_RegisteredEventListener*) _r1.o)->listener_android_hardware_SensorEventListener release];
    ((android_hardware_RegisteredEventListener*) _r1.o)->listener_android_hardware_SensorEventListener = _r2.o;
    [_r3.o retain];
    [((android_hardware_RegisteredEventListener*) _r1.o)->sensor_android_hardware_Sensor release];
    ((android_hardware_RegisteredEventListener*) _r1.o)->sensor_android_hardware_Sensor = _r3.o;
    ((android_hardware_RegisteredEventListener*) _r1.o)->rate_int = _r4.i;
    [_pool release];
    return;
}



@end

