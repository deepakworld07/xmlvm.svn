#import "android_internal_Assert.h"
#import "android_location_Location.h"
#import "java_lang_String.h"
#import "android_location_LocationListener.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_location_LocationManager.h"

java_lang_String* _STATIC_android_location_LocationManager_NETWORK_PROVIDER = @"network";
java_lang_String* _STATIC_android_location_LocationManager_GPS_PROVIDER = @"gps";

@implementation android_location_LocationManager;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_location_LocationManager") == 0) {
        _STATIC_android_location_LocationManager_NETWORK_PROVIDER = (id) [NSNull null];
        _STATIC_android_location_LocationManager_GPS_PROVIDER = (id) [NSNull null];
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    [super dealloc];
}

+ (java_lang_String*) _GET_NETWORK_PROVIDER
{
    return [[_STATIC_android_location_LocationManager_NETWORK_PROVIDER retain] autorelease];
}

+ (void) _PUT_NETWORK_PROVIDER: (java_lang_String*) v
{
    [v retain];
    [_STATIC_android_location_LocationManager_NETWORK_PROVIDER release];
    _STATIC_android_location_LocationManager_NETWORK_PROVIDER = v;
}

+ (java_lang_String*) _GET_GPS_PROVIDER
{
    return [[_STATIC_android_location_LocationManager_GPS_PROVIDER retain] autorelease];
}

+ (void) _PUT_GPS_PROVIDER: (java_lang_String*) v
{
    [v retain];
    [_STATIC_android_location_LocationManager_GPS_PROVIDER release];
    _STATIC_android_location_LocationManager_GPS_PROVIDER = v;
}

- (void) __init_android_location_LocationManager__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    [((java_lang_Object*) _r0.o) __init_java_lang_Object__];
    [_pool release];
    return;
}


- (android_location_Location*) getLastKnownLocation___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r0.o = [NSNull null];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) isProviderEnabled___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r0.i = 0;
    [_pool release];
    return _r0.i;
}


- (void) removeUpdates___android_location_LocationListener :(android_location_LocationListener*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}


- (void) requestLocationUpdates___java_lang_String_long_float_android_location_LocationListener :(java_lang_String*)n1 :(long)n2 :(float)n3 :(android_location_LocationListener*)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    _r2.l = n2;
    _r4.f = n3;
    _r5.o = n4;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}



@end

