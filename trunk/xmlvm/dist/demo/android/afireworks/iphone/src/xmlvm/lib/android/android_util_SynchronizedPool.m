#import "android_util_Poolable.h"
#import "android_util_Pool.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_util_SynchronizedPool.h"


@implementation android_util_SynchronizedPool;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_util_SynchronizedPool") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        mPool_android_util_Pool = (id) [NSNull null];
        mLock_java_lang_Object = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [mPool_android_util_Pool release];
    [mLock_java_lang_Object release];
    [super dealloc];
}

- (void) __init_android_util_SynchronizedPool___android_util_Pool :(android_util_Pool*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [((java_lang_Object*) _r0.o) __init_java_lang_Object__];
    [_r1.o retain];
    [((android_util_SynchronizedPool*) _r0.o)->mPool_android_util_Pool release];
    ((android_util_SynchronizedPool*) _r0.o)->mPool_android_util_Pool = _r1.o;
    [_r0.o retain];
    [((android_util_SynchronizedPool*) _r0.o)->mLock_java_lang_Object release];
    ((android_util_SynchronizedPool*) _r0.o)->mLock_java_lang_Object = _r0.o;
    [_pool release];
    return;
}


- (void) __init_android_util_SynchronizedPool___android_util_Pool_java_lang_Object :(android_util_Pool*)n1 :(java_lang_Object*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    _r2.o = n2;
    [((java_lang_Object*) _r0.o) __init_java_lang_Object__];
    [_r1.o retain];
    [((android_util_SynchronizedPool*) _r0.o)->mPool_android_util_Pool release];
    ((android_util_SynchronizedPool*) _r0.o)->mPool_android_util_Pool = _r1.o;
    [_r2.o retain];
    [((android_util_SynchronizedPool*) _r0.o)->mLock_java_lang_Object release];
    ((android_util_SynchronizedPool*) _r0.o)->mLock_java_lang_Object = _r2.o;
    [_pool release];
    return;
}


- (android_util_Poolable*) acquire__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_util_SynchronizedPool*) _r1.o)->mPool_android_util_Pool retain] autorelease];
    _r0.o = [((android_util_Pool*) _r0.o) acquire__];
    [_r0.o autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (void) release___android_util_Poolable :(android_util_Poolable*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [[((android_util_SynchronizedPool*) _r1.o)->mPool_android_util_Pool retain] autorelease];
    [((android_util_Pool*) _r0.o) release___android_util_Poolable:_r2.o];
    [_pool release];
    return;
}



@end

