#import "android_graphics_Rect.h"
#import "java_io_InputStream.h"
#import "java_lang_String.h"
#import "android_internal_Assert.h"
#import "android_graphics_drawable_Drawable_ConstantState.h"
#import "android_graphics_Canvas.h"
#import "java_util_Arrays.h"
#import "android_util_StateSet.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_graphics_drawable_Drawable.h"

android_graphics_Rect* _STATIC_android_graphics_drawable_Drawable_ZERO_BOUNDS_RECT;

@implementation android_graphics_drawable_Drawable;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_graphics_drawable_Drawable") == 0) {
        _STATIC_android_graphics_drawable_Drawable_ZERO_BOUNDS_RECT = (id) [NSNull null];
        [android_graphics_drawable_Drawable __clinit_android_graphics_drawable_Drawable];
    }
}

- (id) init
{
    if (self = [super init]) {
        bounds_android_graphics_Rect = (id) [NSNull null];
        stateSet_int_ARRAYTYPE = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [bounds_android_graphics_Rect release];
    [stateSet_int_ARRAYTYPE release];
    [super dealloc];
}

+ (android_graphics_Rect*) _GET_ZERO_BOUNDS_RECT
{
    return [[_STATIC_android_graphics_drawable_Drawable_ZERO_BOUNDS_RECT retain] autorelease];
}

+ (void) _PUT_ZERO_BOUNDS_RECT: (android_graphics_Rect*) v
{
    [v retain];
    [_STATIC_android_graphics_drawable_Drawable_ZERO_BOUNDS_RECT release];
    _STATIC_android_graphics_drawable_Drawable_ZERO_BOUNDS_RECT = v;
}

- (void) __init_android_graphics_drawable_Drawable__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    [((java_lang_Object*) _r1.o) __init_java_lang_Object__];
    _r0.o = [android_graphics_drawable_Drawable _GET_ZERO_BOUNDS_RECT];
    [_r0.o retain];
    [((android_graphics_drawable_Drawable*) _r1.o)->bounds_android_graphics_Rect release];
    ((android_graphics_drawable_Drawable*) _r1.o)->bounds_android_graphics_Rect = _r0.o;
    _r0.o = [android_util_StateSet _GET_WILD_CARD];
    [_r0.o retain];
    [((android_graphics_drawable_Drawable*) _r1.o)->stateSet_int_ARRAYTYPE release];
    ((android_graphics_drawable_Drawable*) _r1.o)->stateSet_int_ARRAYTYPE = _r0.o;
    [_pool release];
    return;
}


- (int) setState___int_ARRAYTYPE :(XMLVMArray*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [[((android_graphics_drawable_Drawable*) _r1.o)->stateSet_int_ARRAYTYPE retain] autorelease];
    _r0.i = [java_util_Arrays equals___int_ARRAYTYPE_int_ARRAYTYPE:_r0.o:_r2.o];
    if (_r0.i != 0) goto label15;
    [_r2.o retain];
    [((android_graphics_drawable_Drawable*) _r1.o)->stateSet_int_ARRAYTYPE release];
    ((android_graphics_drawable_Drawable*) _r1.o)->stateSet_int_ARRAYTYPE = _r2.o;
    _r0.i = [((android_graphics_drawable_Drawable*) _r1.o) onStateChange___int_ARRAYTYPE:_r2.o];
    label14:;
    [_pool release];
    return _r0.i;
    label15:;
    _r0.i = 0;
    goto label14;
}


- (XMLVMArray*) getState__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_drawable_Drawable*) _r1.o)->stateSet_int_ARRAYTYPE retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) onStateChange___int_ARRAYTYPE :(XMLVMArray*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.i = 0;
    [_pool release];
    return _r0.i;
}


- (android_graphics_Rect*) getBounds__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.o = [[((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect retain] autorelease];
    _r1.o = [android_graphics_drawable_Drawable _GET_ZERO_BOUNDS_RECT];
    if (_r0.o != _r1.o) goto label29;
    _r0.o = [[[android_graphics_Rect alloc] init] autorelease];
    [((android_graphics_Rect*) _r0.o) __init_android_graphics_Rect__];
    [_r0.o retain];
    [((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect release];
    ((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect = _r0.o;
    _r0.o = [[((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect retain] autorelease];
    _r1.i = [((android_graphics_drawable_Drawable*) _r2.o) getIntrinsicWidth__];
    ((android_graphics_Rect*) _r0.o)->right_int = _r1.i;
    _r0.o = [[((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect retain] autorelease];
    _r1.i = [((android_graphics_drawable_Drawable*) _r2.o) getIntrinsicHeight__];
    ((android_graphics_Rect*) _r0.o)->bottom_int = _r1.i;
    label29:;
    _r0.o = [[((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) getIntrinsicWidth__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = -1;
    [_pool release];
    return _r0.i;
}


- (int) getIntrinsicHeight__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = -1;
    [_pool release];
    return _r0.i;
}


- (int) getMinimumWidth__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.i = [((android_graphics_drawable_Drawable*) _r2.o) getIntrinsicWidth__];
    if (_r0.i <= 0) goto label8;
    _r1 = _r0;
    label7:;
    [_pool release];
    return _r1.i;
    label8:;
    _r1.i = 0;
    goto label7;
}


- (int) getMinimumHeight__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r0.i = [((android_graphics_drawable_Drawable*) _r2.o) getIntrinsicHeight__];
    if (_r0.i <= 0) goto label8;
    _r1 = _r0;
    label7:;
    [_pool release];
    return _r1.i;
    label8:;
    _r1.i = 0;
    goto label7;
}


- (android_graphics_drawable_Drawable_ConstantState*) getConstantState__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [NSNull null];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) isStateful__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.i = 0;
    [_pool release];
    return _r0.i;
}


- (android_graphics_drawable_Drawable*) getCurrent__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) getPadding___android_graphics_Rect :(android_graphics_Rect*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.i = 0;
    [((android_graphics_Rect*) _r2.o) set___int_int_int_int:_r0.i:_r0.i:_r0.i:_r0.i];
    [_pool release];
    return _r0.i;
}


- (void) setBounds___int_int_int_int :(int)n1 :(int)n2 :(int)n3 :(int)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.i = n1;
    _r4.i = n2;
    _r5.i = n3;
    _r6.i = n4;
    _r0.o = [[((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect retain] autorelease];
    _r1.o = [android_graphics_drawable_Drawable _GET_ZERO_BOUNDS_RECT];
    if (_r0.o != _r1.o) goto label13;
    _r0.o = [[[android_graphics_Rect alloc] init] autorelease];
    [((android_graphics_Rect*) _r0.o) __init_android_graphics_Rect__];
    [_r0.o retain];
    [((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect release];
    ((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect = _r0.o;
    label13:;
    _r1.i = ((android_graphics_Rect*) _r0.o)->left_int;
    if (_r1.i != _r3.i) goto label29;
    _r1.i = ((android_graphics_Rect*) _r0.o)->top_int;
    if (_r1.i != _r4.i) goto label29;
    _r1.i = ((android_graphics_Rect*) _r0.o)->right_int;
    if (_r1.i != _r5.i) goto label29;
    _r1.i = ((android_graphics_Rect*) _r0.o)->bottom_int;
    if (_r1.i == _r6.i) goto label39;
    label29:;
    _r1.o = [[((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect retain] autorelease];
    [((android_graphics_Rect*) _r1.o) set___int_int_int_int:_r3.i:_r4.i:_r5.i:_r6.i];
    _r1.o = [[((android_graphics_drawable_Drawable*) _r2.o)->bounds_android_graphics_Rect retain] autorelease];
    [((android_graphics_drawable_Drawable*) _r2.o) onBoundsChange___android_graphics_Rect:_r1.o];
    label39:;
    [_pool release];
    return;
}


- (void) setBounds___android_graphics_Rect :(android_graphics_Rect*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r4.o = self;
    _r5.o = n1;
    _r0.i = ((android_graphics_Rect*) _r5.o)->left_int;
    _r1.i = ((android_graphics_Rect*) _r5.o)->top_int;
    _r2.i = ((android_graphics_Rect*) _r5.o)->right_int;
    _r3.i = ((android_graphics_Rect*) _r5.o)->bottom_int;
    [((android_graphics_drawable_Drawable*) _r4.o) setBounds___int_int_int_int:_r0.i:_r1.i:_r2.i:_r3.i];
    [_pool release];
    return;
}


- (void) onBoundsChange___android_graphics_Rect :(android_graphics_Rect*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_pool release];
    return;
}


- (void) draw___android_graphics_Canvas :(android_graphics_Canvas*)n1
{
}

+ (android_graphics_drawable_Drawable*) createFromStream___java_io_InputStream_java_lang_String :(java_io_InputStream*)n1 :(java_lang_String*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = n1;
    _r2.o = n2;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r0.o = [NSNull null];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (void) setFilterBitmap___boolean :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.i = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}


- (void) setDither___boolean :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.i = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    [_pool release];
    return;
}


+ (void) __clinit_android_graphics_drawable_Drawable
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = [[[android_graphics_Rect alloc] init] autorelease];
    [((android_graphics_Rect*) _r0.o) __init_android_graphics_Rect__];
    [android_graphics_drawable_Drawable _PUT_ZERO_BOUNDS_RECT: _r0.o];
    [_pool release];
    return;
}



@end

