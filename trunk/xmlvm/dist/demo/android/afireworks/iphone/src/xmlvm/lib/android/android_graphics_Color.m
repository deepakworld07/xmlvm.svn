#import "java_lang_IllegalArgumentException.h"
#import "java_lang_Long.h"
#import "java_lang_Integer.h"
#import "java_lang_String.h"
#import "java_util_HashMap.h"
#import "android_internal_Assert.h"
#import "java_lang_RuntimeException.h"
#import "java_util_Locale.h"
#import "java_lang_Math.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_graphics_Color.h"

int _STATIC_android_graphics_Color_BLACK = -16777216;
int _STATIC_android_graphics_Color_DKGRAY = -12303292;
int _STATIC_android_graphics_Color_GRAY = -7829368;
int _STATIC_android_graphics_Color_LTGRAY = -3355444;
int _STATIC_android_graphics_Color_WHITE = -1;
int _STATIC_android_graphics_Color_RED = -65536;
int _STATIC_android_graphics_Color_GREEN = -16711936;
int _STATIC_android_graphics_Color_BLUE = -16776961;
int _STATIC_android_graphics_Color_YELLOW = -256;
int _STATIC_android_graphics_Color_CYAN = -16711681;
int _STATIC_android_graphics_Color_MAGENTA = -65281;
int _STATIC_android_graphics_Color_TRANSPARENT = 0;
java_util_HashMap* _STATIC_android_graphics_Color_sColorNameMap;

@implementation android_graphics_Color;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_graphics_Color") == 0) {
        _STATIC_android_graphics_Color_sColorNameMap = (id) [NSNull null];
        [android_graphics_Color __clinit_android_graphics_Color];
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    [super dealloc];
}

+ (int) _GET_BLACK
{
    return _STATIC_android_graphics_Color_BLACK;
}

+ (void) _PUT_BLACK: (int) v
{
    _STATIC_android_graphics_Color_BLACK = v;
}

+ (int) _GET_DKGRAY
{
    return _STATIC_android_graphics_Color_DKGRAY;
}

+ (void) _PUT_DKGRAY: (int) v
{
    _STATIC_android_graphics_Color_DKGRAY = v;
}

+ (int) _GET_GRAY
{
    return _STATIC_android_graphics_Color_GRAY;
}

+ (void) _PUT_GRAY: (int) v
{
    _STATIC_android_graphics_Color_GRAY = v;
}

+ (int) _GET_LTGRAY
{
    return _STATIC_android_graphics_Color_LTGRAY;
}

+ (void) _PUT_LTGRAY: (int) v
{
    _STATIC_android_graphics_Color_LTGRAY = v;
}

+ (int) _GET_WHITE
{
    return _STATIC_android_graphics_Color_WHITE;
}

+ (void) _PUT_WHITE: (int) v
{
    _STATIC_android_graphics_Color_WHITE = v;
}

+ (int) _GET_RED
{
    return _STATIC_android_graphics_Color_RED;
}

+ (void) _PUT_RED: (int) v
{
    _STATIC_android_graphics_Color_RED = v;
}

+ (int) _GET_GREEN
{
    return _STATIC_android_graphics_Color_GREEN;
}

+ (void) _PUT_GREEN: (int) v
{
    _STATIC_android_graphics_Color_GREEN = v;
}

+ (int) _GET_BLUE
{
    return _STATIC_android_graphics_Color_BLUE;
}

+ (void) _PUT_BLUE: (int) v
{
    _STATIC_android_graphics_Color_BLUE = v;
}

+ (int) _GET_YELLOW
{
    return _STATIC_android_graphics_Color_YELLOW;
}

+ (void) _PUT_YELLOW: (int) v
{
    _STATIC_android_graphics_Color_YELLOW = v;
}

+ (int) _GET_CYAN
{
    return _STATIC_android_graphics_Color_CYAN;
}

+ (void) _PUT_CYAN: (int) v
{
    _STATIC_android_graphics_Color_CYAN = v;
}

+ (int) _GET_MAGENTA
{
    return _STATIC_android_graphics_Color_MAGENTA;
}

+ (void) _PUT_MAGENTA: (int) v
{
    _STATIC_android_graphics_Color_MAGENTA = v;
}

+ (int) _GET_TRANSPARENT
{
    return _STATIC_android_graphics_Color_TRANSPARENT;
}

+ (void) _PUT_TRANSPARENT: (int) v
{
    _STATIC_android_graphics_Color_TRANSPARENT = v;
}

+ (java_util_HashMap*) _GET_sColorNameMap
{
    return [[_STATIC_android_graphics_Color_sColorNameMap retain] autorelease];
}

+ (void) _PUT_sColorNameMap: (java_util_HashMap*) v
{
    [v retain];
    [_STATIC_android_graphics_Color_sColorNameMap release];
    _STATIC_android_graphics_Color_sColorNameMap = v;
}

- (void) __init_android_graphics_Color__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    [((java_lang_Object*) _r0.o) __init_java_lang_Object__];
    [_pool release];
    return;
}


+ (int) alpha___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.i = n1;
    _r0.i = _r1.i >> (0x1f & 24);
    [_pool release];
    return _r0.i;
}


+ (int) red___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.i = n1;
    _r0.i = _r1.i >> 16;
    _r0.i = _r0.i & 255;
    [_pool release];
    return _r0.i;
}


+ (int) green___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.i = n1;
    _r0.i = _r1.i >> 8;
    _r0.i = _r0.i & 255;
    [_pool release];
    return _r0.i;
}


+ (int) blue___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.i = n1;
    _r0.i = _r1.i & 255;
    [_pool release];
    return _r0.i;
}


+ (int) rgb___int_int_int :(int)n1 :(int)n2 :(int)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.i = n1;
    _r3.i = n2;
    _r4.i = n3;
    _r0.i = -16777216;
    _r1.i = _r2.i << 16;
    _r0.i = _r0.i | _r1.i;
    _r1.i = _r3.i << 8;
    _r0.i = _r0.i | _r1.i;
    _r0.i = _r0.i | _r4.i;
    [_pool release];
    return _r0.i;
}


+ (int) argb___int_int_int_int :(int)n1 :(int)n2 :(int)n3 :(int)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.i = n1;
    _r3.i = n2;
    _r4.i = n3;
    _r5.i = n4;
    _r0.i = _r2.i << 24;
    _r1.i = _r3.i << 16;
    _r0.i = _r0.i | _r1.i;
    _r1.i = _r4.i << 8;
    _r0.i = _r0.i | _r1.i;
    _r0.i = _r0.i | _r5.i;
    [_pool release];
    return _r0.i;
}


+ (float) hue___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    XMLVMElem _r10;
    XMLVMElem _r11;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r11.i = n1;
    _r10.i = _r11.i >> 16;
    _r7.i = _r10.i & 255;
    _r10.i = _r11.i >> 8;
    _r6.i = _r10.i & 255;
    _r2.i = _r11.i & 255;
    _r10.i = [java_lang_Math max___int_int:_r7.i:_r6.i];
    _r1.i = [java_lang_Math max___int_int:_r2.i:_r10.i];
    _r10.i = [java_lang_Math min___int_int:_r7.i:_r6.i];
    _r8.i = [java_lang_Math min___int_int:_r2.i:_r10.i];
    if (_r1.i != _r8.i) goto label30;
    _r0.f = 0.0;
    label29:;
    [_pool release];
    return _r0.f;
    label30:;
    _r10.i = _r1.i - _r8.i;
    _r9.f = (float) _r10.i;
    _r10.i = _r1.i - _r7.i;
    _r10.f = (float) _r10.i;
    _r5.f = _r10.f / _r9.f;
    _r10.i = _r1.i - _r6.i;
    _r10.f = (float) _r10.i;
    _r4.f = _r10.f / _r9.f;
    _r10.i = _r1.i - _r2.i;
    _r10.f = (float) _r10.i;
    _r3.f = _r10.f / _r9.f;
    if (_r7.i != _r1.i) goto label64;
    _r0.f = _r3.f - _r4.f;
    label52:;
    _r10.f = 6.0;
    _r0.f = _r0.f / _r10.f;
    _r10.f = 0.0;
    _r10.i = _r0.f > _r10.f ? 1 : (_r0.f == _r10.f ? 0 : -1);
    if (_r10.i >= 0) goto label29;
    _r10.f = 1.0;
    _r0.f = _r0.f + _r10.f;
    goto label29;
    label64:;
    if (_r6.i != _r1.i) goto label72;
    _r10.f = 2.0;
    _r10.f = _r10.f + _r5.f;
    _r0.f = _r10.f - _r3.f;
    goto label52;
    label72:;
    _r10.f = 4.0;
    _r10.f = _r10.f + _r4.f;
    _r0.f = _r10.f - _r5.f;
    goto label52;
}


+ (float) saturation___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r8.i = n1;
    _r6.i = _r8.i >> 16;
    _r4.i = _r6.i & 255;
    _r6.i = _r8.i >> 8;
    _r3.i = _r6.i & 255;
    _r2.i = _r8.i & 255;
    _r6.i = [java_lang_Math max___int_int:_r4.i:_r3.i];
    _r1.i = [java_lang_Math max___int_int:_r2.i:_r6.i];
    _r6.i = [java_lang_Math min___int_int:_r4.i:_r3.i];
    _r5.i = [java_lang_Math min___int_int:_r2.i:_r6.i];
    if (_r1.i != _r5.i) goto label30;
    _r0.f = 0.0;
    label29:;
    [_pool release];
    return _r0.f;
    label30:;
    _r6.i = _r1.i - _r5.i;
    _r6.f = (float) _r6.i;
    _r7.f = (float) _r1.i;
    _r0.f = _r6.f / _r7.f;
    goto label29;
}


+ (float) brightness___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r6.i = n1;
    _r4.i = _r6.i >> 16;
    _r3.i = _r4.i & 255;
    _r4.i = _r6.i >> 8;
    _r2.i = _r4.i & 255;
    _r1.i = _r6.i & 255;
    _r4.i = [java_lang_Math max___int_int:_r3.i:_r2.i];
    _r0.i = [java_lang_Math max___int_int:_r1.i:_r4.i];
    _r4.f = (float) _r0.i;
    _r5.f = 255.0;
    _r4.f = _r4.f / _r5.f;
    [_pool release];
    return _r4.f;
}


+ (int) parseColor___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r5.o = n1;
    _r4.o = @"Unknown color";
    _r2.i = 0;
    _r2.i = [((java_lang_String*) _r5.o) charAt___int:_r2.i];
    _r3.i = 35;
    if (_r2.i != _r3.i) goto label51;
    _r2.i = 1;
    _r2.o = [((java_lang_String*) _r5.o) substring___int:_r2.i];
    [_r2.o autorelease];
    _r3.i = 16;
    _r0.l = [java_lang_Long parseLong___java_lang_String_int:_r2.o:_r3.i];
    _r2.i = [((java_lang_String*) _r5.o) length__];
    _r3.i = 7;
    if (_r2.i != _r3.i) goto label35;
    _r2.l = -16777216;
    _r0.l = _r0.l | _r2.l;
    label33:;
    _r2.i = (int) _r0.l;
    label34:;
    [_pool release];
    return _r2.i;
    label35:;
    _r2.i = [((java_lang_String*) _r5.o) length__];
    _r3.i = 9;
    if (_r2.i == _r3.i) goto label33;
    _r2.o = [[[java_lang_IllegalArgumentException alloc] init] autorelease];
    _r3.o = @"Unknown color";
    [((java_lang_IllegalArgumentException*) _r2.o) __init_java_lang_IllegalArgumentException___java_lang_String:_r4.o];
    @throw _r2.o;
    label51:;
    _r2.o = [android_graphics_Color _GET_sColorNameMap];
    _r3.o = [java_util_Locale _GET_US];
    _r3.o = [((java_lang_String*) _r5.o) toLowerCase___java_util_Locale:_r3.o];
    [_r3.o autorelease];
    _r0.o = [((java_util_HashMap*) _r2.o) get___java_lang_Object:_r3.o];
    [_r0.o autorelease];
    _r0.o = _r0.o;
    if (_r0.o == [NSNull null]) goto label72;
    _r2.i = [((java_lang_Integer*) _r0.o) intValue__];
    goto label34;
    label72:;
    _r2.o = [[[java_lang_IllegalArgumentException alloc] init] autorelease];
    _r3.o = @"Unknown color";
    [((java_lang_IllegalArgumentException*) _r2.o) __init_java_lang_IllegalArgumentException___java_lang_String:_r4.o];
    @throw _r2.o;
}


+ (int) HSBtoColor___float_ARRAYTYPE :(XMLVMArray*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = n1;
    _r0.i = 0;
    _r0.f = ((XMLVMArray*) _r3.o)->array.f[_r0.i];
    _r1.i = 1;
    _r1.f = ((XMLVMArray*) _r3.o)->array.f[_r1.i];
    _r2.i = 2;
    _r2.f = ((XMLVMArray*) _r3.o)->array.f[_r2.i];
    _r0.i = [android_graphics_Color HSBtoColor___float_float_float:_r0.f:_r1.f:_r2.f];
    [_pool release];
    return _r0.i;
}


+ (int) HSBtoColor___float_float_float :(float)n1 :(float)n2 :(float)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    XMLVMElem _r10;
    XMLVMElem _r11;
    XMLVMElem _r12;
    XMLVMElem _r13;
    XMLVMElem _r14;
    XMLVMElem _r15;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r13.f = n1;
    _r14.f = n2;
    _r15.f = n3;
    _r12.f = 255.0;
    _r11.f = 1.0;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r7.f = 0.0;
    _r2.f = 0.0;
    _r0.f = 0.0;
    _r9.i = (int) _r13.f;
    _r9.f = (float) _r9.i;
    _r9.f = _r13.f - _r9.f;
    _r10.f = 6.0;
    _r3.f = _r9.f * _r10.f;
    _r4.i = (int) _r3.f;
    _r9.f = (float) _r4.i;
    _r1.f = _r3.f - _r9.f;
    _r9.f = _r11.f - _r14.f;
    _r5.f = _r15.f * _r9.f;
    _r9.f = _r14.f * _r1.f;
    _r9.f = _r11.f - _r9.f;
    _r6.f = _r15.f * _r9.f;
    _r9.f = _r11.f - _r1.f;
    _r9.f = _r9.f * _r14.f;
    _r9.f = _r11.f - _r9.f;
    _r8.f = _r15.f * _r9.f;
    switch (_r4.i) {
    case 0: goto label61;
    case 1: goto label65;
    case 2: goto label69;
    case 3: goto label73;
    case 4: goto label77;
    case 5: goto label81;
    }
    label42:;
    _r9.i = -16777216;
    _r10.f = _r7.f * _r12.f;
    _r10.i = (int) _r10.f;
    _r10.i = _r10.i << 16;
    _r9.i = _r9.i | _r10.i;
    _r10.f = _r2.f * _r12.f;
    _r10.i = (int) _r10.f;
    _r10.i = _r10.i << 8;
    _r9.i = _r9.i | _r10.i;
    _r10.f = _r0.f * _r12.f;
    _r10.i = (int) _r10.f;
    _r9.i = _r9.i | _r10.i;
    [_pool release];
    return _r9.i;
    label61:;
    _r7 = _r15;
    _r2 = _r8;
    _r0 = _r5;
    goto label42;
    label65:;
    _r7 = _r6;
    _r2 = _r15;
    _r0 = _r5;
    goto label42;
    label69:;
    _r7 = _r5;
    _r2 = _r15;
    _r0 = _r8;
    goto label42;
    label73:;
    _r7 = _r5;
    _r2 = _r6;
    _r0 = _r15;
    goto label42;
    label77:;
    _r7 = _r8;
    _r2 = _r5;
    _r0 = _r15;
    goto label42;
    label81:;
    _r7 = _r15;
    _r2 = _r5;
    _r0 = _r6;
    goto label42;
    label86:;
}


+ (void) RGBToHSV___int_int_int_float_ARRAYTYPE :(int)n1 :(int)n2 :(int)n3 :(XMLVMArray*)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.i = n1;
    _r3.i = n2;
    _r4.i = n3;
    _r5.o = n4;
    _r0.i = [_r5.o count];
    _r1.i = 3;
    if (_r0.i >= _r1.i) goto label12;
    _r0.o = [[[java_lang_RuntimeException alloc] init] autorelease];
    _r1.o = @"3 components required for hsv";
    [((java_lang_RuntimeException*) _r0.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    @throw _r0.o;
    label12:;
    [android_graphics_Color nativeRGBToHSV___int_int_int_float_ARRAYTYPE:_r2.i:_r3.i:_r4.i:_r5.o];
    [_pool release];
    return;
}


+ (void) colorToHSV___int_float_ARRAYTYPE :(int)n1 :(XMLVMArray*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.i = n1;
    _r4.o = n2;
    _r0.i = _r3.i >> 16;
    _r0.i = _r0.i & 255;
    _r1.i = _r3.i >> 8;
    _r1.i = _r1.i & 255;
    _r2.i = _r3.i & 255;
    [android_graphics_Color RGBToHSV___int_int_int_float_ARRAYTYPE:_r0.i:_r1.i:_r2.i:_r4.o];
    [_pool release];
    return;
}


+ (int) HSVToColor___float_ARRAYTYPE :(XMLVMArray*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = n1;
    _r0.i = 255;
    _r0.i = [android_graphics_Color HSVToColor___int_float_ARRAYTYPE:_r0.i:_r1.o];
    [_pool release];
    return _r0.i;
}


+ (int) HSVToColor___int_float_ARRAYTYPE :(int)n1 :(XMLVMArray*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.i = n1;
    _r3.o = n2;
    _r0.i = [_r3.o count];
    _r1.i = 3;
    if (_r0.i >= _r1.i) goto label12;
    _r0.o = [[[java_lang_RuntimeException alloc] init] autorelease];
    _r1.o = @"3 components required for hsv";
    [((java_lang_RuntimeException*) _r0.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    @throw _r0.o;
    label12:;
    _r0.i = [android_graphics_Color nativeHSVToColor___int_float_ARRAYTYPE:_r2.i:_r3.o];
    [_pool release];
    return _r0.i;
}


+ (void) nativeRGBToHSV___int_int_int_float_ARRAYTYPE :(int)n1 :(int)n2 :(int)n3 :(XMLVMArray*)n4
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (int) nativeHSVToColor___int_float_ARRAYTYPE :(int)n1 :(XMLVMArray*)n2
{
    NSException* ex = [[NSException alloc] initWithName:@"Native method not implemented" reason:nil userInfo:nil];
    @throw ex;
}

+ (void) __clinit_android_graphics_Color
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = [[[java_util_HashMap alloc] init] autorelease];
    [((java_util_HashMap*) _r0.o) __init_java_util_HashMap__];
    [android_graphics_Color _PUT_sColorNameMap: _r0.o];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"black";
    _r2.i = -16777216;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"darkgray";
    _r2.i = -12303292;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"gray";
    _r2.i = -7829368;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"lightgray";
    _r2.i = -3355444;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"white";
    _r2.i = -1;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"red";
    _r2.i = -65536;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"green";
    _r2.i = -16711936;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"blue";
    _r2.i = -16776961;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"yellow";
    _r2.i = -256;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"cyan";
    _r2.i = -16711681;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    _r0.o = [android_graphics_Color _GET_sColorNameMap];
    _r1.o = @"magenta";
    _r2.i = -65281;
    _r2.o = [java_lang_Integer valueOf___int:_r2.i];
    [_r2.o autorelease];
    _res = [((java_util_HashMap*) _r0.o) put___java_lang_Object_java_lang_Object:_r1.o:_r2.o];
    [_res release];
    [_pool release];
    return;
}



@end

