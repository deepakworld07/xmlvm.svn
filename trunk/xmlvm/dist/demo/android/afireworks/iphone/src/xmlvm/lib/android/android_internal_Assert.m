#import "java_lang_RuntimeException.h"
#import "java_lang_String.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_internal_Assert.h"


@implementation android_internal_Assert;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_internal_Assert") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
    }
    return self;
}

- (void) dealloc
{
    [super dealloc];
}

- (void) __init_android_internal_Assert__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    [((java_lang_Object*) _r0.o) __init_java_lang_Object__];
    [_pool release];
    return;
}


+ (void) NOT_IMPLEMENTED__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = [[[java_lang_RuntimeException alloc] init] autorelease];
    _r1.o = @"NOT IMPLEMENTED";
    [((java_lang_RuntimeException*) _r0.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    @throw _r0.o;
}


+ (void) FAIL___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = n1;
    _r0.o = [[[java_lang_RuntimeException alloc] init] autorelease];
    [((java_lang_RuntimeException*) _r0.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    @throw _r0.o;
}


+ (void) CHECK___boolean :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.i = n1;
    if (_r2.i != 0) goto label10;
    _r0.o = [[[java_lang_RuntimeException alloc] init] autorelease];
    _r1.o = @"FAILED CHECK";
    [((java_lang_RuntimeException*) _r0.o) __init_java_lang_RuntimeException___java_lang_String:_r1.o];
    @throw _r0.o;
    label10:;
    [_pool release];
    return;
}



@end

