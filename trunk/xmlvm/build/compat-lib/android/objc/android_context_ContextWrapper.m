#import "java_io_FileOutputStream.h"
#import "java_lang_Object.h"
#import "android_content_res_AssetManager.h"
#import "java_lang_String.h"
#import "android_internal_ActivityManager.h"
#import "android_internal_Assert.h"
#import "android_os_Looper.h"
#import "android_content_SharedPreferences.h"
#import "java_io_File.h"
#import "android_content_ContentResolver.h"
#import "android_content_res_Resources.h"
#import "java_io_FileInputStream.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_context_ContextWrapper.h"


@implementation android_context_ContextWrapper;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_context_ContextWrapper") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        resources_android_content_res_Resources = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [resources_android_content_res_Resources release];
    [super dealloc];
}

- (void) __init_android_context_ContextWrapper__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    [((android_content_Context*) _r1.o) __init_android_content_Context__];
    _r0.o = [[[android_content_res_Resources alloc] init] autorelease];
    [((android_content_res_Resources*) _r0.o) __init_android_content_res_Resources___android_content_Context:_r1.o];
    [_r0.o retain];
    [((android_context_ContextWrapper*) _r1.o)->resources_android_content_res_Resources release];
    ((android_context_ContextWrapper*) _r1.o)->resources_android_content_res_Resources = _r0.o;
    [_pool release];
    return;
}


- (android_content_SharedPreferences*) getSharedPreferences___java_lang_String_int :(java_lang_String*)n1 :(int)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r3.i = n2;
    _r0.o = [[[android_content_SharedPreferences alloc] init] autorelease];
    [((android_content_SharedPreferences*) _r0.o) __init_android_content_SharedPreferences___int:_r3.i];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (android_content_res_Resources*) getResources__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_context_ContextWrapper*) _r1.o)->resources_android_content_res_Resources retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (java_lang_String*) getPackageName__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [android_internal_ActivityManager getApplicationPackageName__];
    [_r0.o autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (android_content_res_AssetManager*) getAssets__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[[android_content_res_AssetManager alloc] init] autorelease];
    [((android_content_res_AssetManager*) _r0.o) __init_android_content_res_AssetManager__];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (android_content_Context*) getApplicationContext__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (java_io_FileInputStream*) openFileInput___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [[[java_io_FileInputStream alloc] init] autorelease];
    [((java_io_FileInputStream*) _r0.o) __init_java_io_FileInputStream___java_lang_String:_r2.o];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (java_io_FileOutputStream*) openFileOutput___java_lang_String_int :(java_lang_String*)n1 :(int)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r3.i = n2;
    _r0.o = [[[java_io_FileOutputStream alloc] init] autorelease];
    [((java_io_FileOutputStream*) _r0.o) __init_java_io_FileOutputStream___java_lang_String:_r2.o];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) deleteFile___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    _r0.o = [[[java_io_File alloc] init] autorelease];
    [((java_io_File*) _r0.o) __init_java_io_File___java_lang_String:_r2.o];
    _r0.i = [((java_io_File*) _r0.o) delete__];
    [_pool release];
    return _r0.i;
}


- (android_os_Looper*) getMainLooper__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r0.o = [NSNull null];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (android_content_ContentResolver*) getContentResolver__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r0.o = [NSNull null];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (java_io_File*) getFileStreamPath___java_lang_String :(java_lang_String*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.o = n1;
    [android_internal_Assert NOT_IMPLEMENTED__];
    _r0.o = [NSNull null];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}



@end

