#import "java_util_ArrayList.h"
#import "android_hardware_RegisteredListener.h"
#import "android_hardware_Sensor.h"
#import "java_util_List.h"
#import "android_hardware_SensorListener.h"
#import "android_hardware_RegisteredEventListener.h"
#import "android_internal_ActivityManager.h"
#import "org_xmlvm_iphone_UIAccelerometerDelegate.h"
#import "java_util_Iterator.h"
#import "android_hardware_SensorEvent.h"
#import "android_app_Activity.h"
#import "org_xmlvm_iphone_UIAccelerometer.h"
#import "android_hardware_SensorEventListener.h"
#import "org_xmlvm_iphone_UIAcceleration.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_hardware_SensorManager.h"

float _STATIC_android_hardware_SensorManager_GRAVITY_EARTH = 9.80665;
int _STATIC_android_hardware_SensorManager_SENSOR_ACCELEROMETER = 2;
int _STATIC_android_hardware_SensorManager_SENSOR_DELAY_FASTEST = 0;

@implementation android_hardware_SensorManager;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_hardware_SensorManager") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        listeners_java_util_List = (id) [NSNull null];
        eventListeners_java_util_List = (id) [NSNull null];
        accel_org_xmlvm_iphone_UIAccelerometer = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [listeners_java_util_List release];
    [eventListeners_java_util_List release];
    [accel_org_xmlvm_iphone_UIAccelerometer release];
    [super dealloc];
}

+ (float) _GET_GRAVITY_EARTH
{
    return _STATIC_android_hardware_SensorManager_GRAVITY_EARTH;
}

+ (void) _PUT_GRAVITY_EARTH: (float) v
{
    _STATIC_android_hardware_SensorManager_GRAVITY_EARTH = v;
}

+ (int) _GET_SENSOR_ACCELEROMETER
{
    return _STATIC_android_hardware_SensorManager_SENSOR_ACCELEROMETER;
}

+ (void) _PUT_SENSOR_ACCELEROMETER: (int) v
{
    _STATIC_android_hardware_SensorManager_SENSOR_ACCELEROMETER = v;
}

+ (int) _GET_SENSOR_DELAY_FASTEST
{
    return _STATIC_android_hardware_SensorManager_SENSOR_DELAY_FASTEST;
}

+ (void) _PUT_SENSOR_DELAY_FASTEST: (int) v
{
    _STATIC_android_hardware_SensorManager_SENSOR_DELAY_FASTEST = v;
}

- (void) __init_android_hardware_SensorManager__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    [((java_lang_Object*) _r3.o) __init_java_lang_Object__];
    _r0.o = [[[java_util_ArrayList alloc] init] autorelease];
    [((java_util_ArrayList*) _r0.o) __init_java_util_ArrayList__];
    [_r0.o retain];
    [((android_hardware_SensorManager*) _r3.o)->listeners_java_util_List release];
    ((android_hardware_SensorManager*) _r3.o)->listeners_java_util_List = _r0.o;
    _r0.o = [[[java_util_ArrayList alloc] init] autorelease];
    [((java_util_ArrayList*) _r0.o) __init_java_util_ArrayList__];
    [_r0.o retain];
    [((android_hardware_SensorManager*) _r3.o)->eventListeners_java_util_List release];
    ((android_hardware_SensorManager*) _r3.o)->eventListeners_java_util_List = _r0.o;
    _r0.o = [org_xmlvm_iphone_UIAccelerometer sharedAccelerometer__];
    [_r0.o autorelease];
    [_r0.o retain];
    [((android_hardware_SensorManager*) _r3.o)->accel_org_xmlvm_iphone_UIAccelerometer release];
    ((android_hardware_SensorManager*) _r3.o)->accel_org_xmlvm_iphone_UIAccelerometer = _r0.o;
    _r0.o = [[((android_hardware_SensorManager*) _r3.o)->accel_org_xmlvm_iphone_UIAccelerometer retain] autorelease];
    _r1.d = 0.025;
    [((org_xmlvm_iphone_UIAccelerometer*) _r0.o) setUpdateInterval___double:_r1.d];
    _r0.o = [[((android_hardware_SensorManager*) _r3.o)->accel_org_xmlvm_iphone_UIAccelerometer retain] autorelease];
    [((org_xmlvm_iphone_UIAccelerometer*) _r0.o) setDelegate___org_xmlvm_iphone_UIAccelerometerDelegate:_r3.o];
    [_pool release];
    return;
}


- (void) registerListener___android_hardware_SensorListener_int_int :(android_hardware_SensorListener*)n1 :(int)n2 :(int)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r4.i = n2;
    _r5.i = n3;
    _r0.o = [[((android_hardware_SensorManager*) _r2.o)->listeners_java_util_List retain] autorelease];
    _r1.o = [[[android_hardware_RegisteredListener alloc] init] autorelease];
    [((android_hardware_RegisteredListener*) _r1.o) __init_android_hardware_RegisteredListener___android_hardware_SensorListener_int:_r3.o:_r4.i];
    [((java_util_List*) _r0.o) add___java_lang_Object:_r1.o];
    [_pool release];
    return;
}


- (void) unregisterListener___android_hardware_SensorListener :(android_hardware_SensorListener*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r3.o = self;
    _r4.o = n1;
    _r0.i = 0;
    label1:;
    _r2.o = [[((android_hardware_SensorManager*) _r3.o)->listeners_java_util_List retain] autorelease];
    _r2.i = [((java_util_List*) _r2.o) size__];
    if (_r0.i >= _r2.i) goto label30;
    _r2.o = [[((android_hardware_SensorManager*) _r3.o)->listeners_java_util_List retain] autorelease];
    _r1.o = [((java_util_List*) _r2.o) get___int:_r0.i];
    [_r1.o autorelease];
    _r1.o = _r1.o;
    _r2.o = [[((android_hardware_RegisteredListener*) _r1.o)->listener_android_hardware_SensorListener retain] autorelease];
    if (_r2.o != _r4.o) goto label27;
    _r2.o = [[((android_hardware_SensorManager*) _r3.o)->listeners_java_util_List retain] autorelease];
    _res = [((java_util_List*) _r2.o) remove___int:_r0.i];
    [_res release];
    goto label1;
    label27:;
    _r0.i = _r0.i + 1;
    goto label1;
    label30:;
    [_pool release];
    return;
}


- (void) accelerometerDidAccelerate___org_xmlvm_iphone_UIAccelerometer_org_xmlvm_iphone_UIAcceleration :(org_xmlvm_iphone_UIAccelerometer*)n1 :(org_xmlvm_iphone_UIAcceleration*)n2
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    XMLVMElem _r7;
    XMLVMElem _r8;
    XMLVMElem _r9;
    XMLVMElem _r10;
    XMLVMElem _r11;
    XMLVMElem _r12;
    XMLVMElem _r13;
    XMLVMElem _r14;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r12.o = self;
    _r13.o = n1;
    _r14.o = n2;
    _r8.d = [((org_xmlvm_iphone_UIAcceleration*) _r14.o) x__];
    _r10.d = 9.806650161743164;
    _r8.d = _r8.d * _r10.d;
    _r5.f = (float) _r8.d;
    _r8.d = [((org_xmlvm_iphone_UIAcceleration*) _r14.o) y__];
    _r10.d = 9.806650161743164;
    _r8.d = _r8.d * _r10.d;
    _r6.f = (float) _r8.d;
    _r8.d = [((org_xmlvm_iphone_UIAcceleration*) _r14.o) z__];
    _r10.d = 9.806650161743164;
    _r8.d = _r8.d * _r10.d;
    _r7.f = (float) _r8.d;
    _r8.o = [android_internal_ActivityManager getTopActivity__];
    [_r8.o autorelease];
    _r8.i = [((android_app_Activity*) _r8.o) getRequestedOrientation__];
    _r9.i = 1;
    if (_r8.i != _r9.i) goto label97;
    _r8.i = 6;
    _r4.o = [XMLVMArray createSingleDimensionWithType:6 andSize:_r8.i];
    _r8.i = 0;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r5.f;
    _r8.i = 1;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r6.f;
    _r8.i = 2;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r7.f;
    _r8.i = 3;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r5.f;
    _r8.i = 4;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r6.f;
    _r8.i = 5;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r7.f;
    label65:;
    _r1.i = 0;
    label66:;
    _r8.o = [[((android_hardware_SensorManager*) _r12.o)->listeners_java_util_List retain] autorelease];
    _r8.i = [((java_util_List*) _r8.o) size__];
    if (_r1.i >= _r8.i) goto label120;
    _r8.o = [[((android_hardware_SensorManager*) _r12.o)->listeners_java_util_List retain] autorelease];
    _r3.o = [((java_util_List*) _r8.o) get___int:_r1.i];
    [_r3.o autorelease];
    _r3.o = _r3.o;
    _r8.i = ((android_hardware_RegisteredListener*) _r3.o)->sensors_int;
    _r8.i = _r8.i & 2;
    if (_r8.i == 0) goto label94;
    _r8.o = [[((android_hardware_RegisteredListener*) _r3.o)->listener_android_hardware_SensorListener retain] autorelease];
    _r9.i = 2;
    [((android_hardware_SensorListener*) _r8.o) onSensorChanged___int_float_ARRAYTYPE:_r9.i:_r4.o];
    label94:;
    _r1.i = _r1.i + 1;
    goto label66;
    label97:;
    _r8.i = 6;
    _r4.o = [XMLVMArray createSingleDimensionWithType:6 andSize:_r8.i];
    _r8.i = 0;
    _r9.f = -_r6.f;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r9.f;
    _r8.i = 1;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r5.f;
    _r8.i = 2;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r7.f;
    _r8.i = 3;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r5.f;
    _r8.i = 4;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r6.f;
    _r8.i = 5;
    ((XMLVMArray*) _r4.o)->array.f[_r8.i] = _r7.f;
    goto label65;
    label120:;
    _r8.o = [[((android_hardware_SensorManager*) _r12.o)->eventListeners_java_util_List retain] autorelease];
    _r2.o = [((java_util_List*) _r8.o) iterator__];
    [_r2.o autorelease];
    label126:;
    _r8.i = [((java_util_Iterator*) _r2.o) hasNext__];
    if (_r8.i == 0) goto label173;
    _r3.o = [((java_util_Iterator*) _r2.o) next__];
    [_r3.o autorelease];
    _r3.o = _r3.o;
    _r8.o = [[((android_hardware_RegisteredEventListener*) _r3.o)->sensor_android_hardware_Sensor retain] autorelease];
    _r8.i = [((android_hardware_Sensor*) _r8.o) getType__];
    _r9.i = 1;
    if (_r8.i != _r9.i) goto label126;
    _r0.o = [[[android_hardware_SensorEvent alloc] init] autorelease];
    _r8.i = [_r4.o count];
    [((android_hardware_SensorEvent*) _r0.o) __init_android_hardware_SensorEvent___int:_r8.i];
    _r1.i = 0;
    label154:;
    _r8.i = [_r4.o count];
    if (_r1.i >= _r8.i) goto label167;
    _r8.o = [[((android_hardware_SensorEvent*) _r0.o)->values_float_ARRAYTYPE retain] autorelease];
    _r9.f = ((XMLVMArray*) _r4.o)->array.f[_r1.i];
    _r9.f = -_r9.f;
    ((XMLVMArray*) _r8.o)->array.f[_r1.i] = _r9.f;
    _r1.i = _r1.i + 1;
    goto label154;
    label167:;
    _r8.o = [[((android_hardware_RegisteredEventListener*) _r3.o)->listener_android_hardware_SensorEventListener retain] autorelease];
    [((android_hardware_SensorEventListener*) _r8.o) onSensorChanged___android_hardware_SensorEvent:_r0.o];
    goto label126;
    label173:;
    [_pool release];
    return;
}


- (android_hardware_Sensor*) getDefaultSensor___int :(int)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r2.i = n1;
    _r0.o = [[[android_hardware_Sensor alloc] init] autorelease];
    [((android_hardware_Sensor*) _r0.o) __init_android_hardware_Sensor___int:_r2.i];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) registerListener___android_hardware_SensorEventListener_android_hardware_Sensor_int :(android_hardware_SensorEventListener*)n1 :(android_hardware_Sensor*)n2 :(int)n3
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.o = n1;
    _r4.o = n2;
    _r5.i = n3;
    _r0.o = [[((android_hardware_SensorManager*) _r2.o)->eventListeners_java_util_List retain] autorelease];
    _r1.o = [[[android_hardware_RegisteredEventListener alloc] init] autorelease];
    [((android_hardware_RegisteredEventListener*) _r1.o) __init_android_hardware_RegisteredEventListener___android_hardware_SensorEventListener_android_hardware_Sensor_int:_r3.o:_r4.o:_r5.i];
    _r0.i = [((java_util_List*) _r0.o) add___java_lang_Object:_r1.o];
    [_pool release];
    return _r0.i;
}



@end

