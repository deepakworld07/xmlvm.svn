#import "java_lang_Object.h"
#import "android_graphics_Canvas.h"
#import "org_xmlvm_iphone_CGSize.h"
#import "org_xmlvm_iphone_UIImage.h"

// Automatically generated by xmlvm2obj. Do not edit!


#import "android_graphics_drawable_BitmapDrawable.h"


@implementation android_graphics_drawable_BitmapDrawable;

+ (void) initialize
{
    if (strcmp(class_getName(self), "android_graphics_drawable_BitmapDrawable") == 0) {
    }
}

- (id) init
{
    if (self = [super init]) {
        image_org_xmlvm_iphone_UIImage = (id) [NSNull null];
    }
    return self;
}

- (void) dealloc
{
    [image_org_xmlvm_iphone_UIImage release];
    [super dealloc];
}

- (void) __init_android_graphics_drawable_BitmapDrawable___org_xmlvm_iphone_UIImage :(org_xmlvm_iphone_UIImage*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [((android_graphics_drawable_Drawable*) _r0.o) __init_android_graphics_drawable_Drawable__];
    [_r1.o retain];
    [((android_graphics_drawable_BitmapDrawable*) _r0.o)->image_org_xmlvm_iphone_UIImage release];
    ((android_graphics_drawable_BitmapDrawable*) _r0.o)->image_org_xmlvm_iphone_UIImage = _r1.o;
    [_pool release];
    return;
}


+ (android_graphics_drawable_BitmapDrawable*) xmlvmCreateWithImage___org_xmlvm_iphone_UIImage :(org_xmlvm_iphone_UIImage*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = n1;
    _r0.o = [[[android_graphics_drawable_BitmapDrawable alloc] init] autorelease];
    [((android_graphics_drawable_BitmapDrawable*) _r0.o) __init_android_graphics_drawable_BitmapDrawable___org_xmlvm_iphone_UIImage:_r1.o];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (org_xmlvm_iphone_UIImage*) xmlvmGetImage__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_drawable_BitmapDrawable*) _r1.o)->image_org_xmlvm_iphone_UIImage retain] autorelease];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (void) xmlvmSetImage___org_xmlvm_iphone_UIImage :(org_xmlvm_iphone_UIImage*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_r1.o retain];
    [((android_graphics_drawable_BitmapDrawable*) _r0.o)->image_org_xmlvm_iphone_UIImage release];
    ((android_graphics_drawable_BitmapDrawable*) _r0.o)->image_org_xmlvm_iphone_UIImage = _r1.o;
    [_pool release];
    return;
}


- (android_graphics_drawable_BitmapDrawable*) xmlvmCropImage___int_int_int_int :(int)n1 :(int)n2 :(int)n3 :(int)n4
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    XMLVMElem _r2;
    XMLVMElem _r3;
    XMLVMElem _r4;
    XMLVMElem _r5;
    XMLVMElem _r6;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r2.o = self;
    _r3.i = n1;
    _r4.i = n2;
    _r5.i = n3;
    _r6.i = n4;
    _r0.o = [[[android_graphics_drawable_BitmapDrawable alloc] init] autorelease];
    _r1.o = [[((android_graphics_drawable_BitmapDrawable*) _r2.o)->image_org_xmlvm_iphone_UIImage retain] autorelease];
    _r1.o = [((org_xmlvm_iphone_UIImage*) _r1.o) cropImage___int_int_int_int:_r3.i:_r4.i:_r5.i:_r6.i];
    [_r1.o autorelease];
    [((android_graphics_drawable_BitmapDrawable*) _r0.o) __init_android_graphics_drawable_BitmapDrawable___org_xmlvm_iphone_UIImage:_r1.o];
    [_r0.o retain];
    [_pool release];
    return _r0.o;
}


- (int) getIntrinsicWidth__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_drawable_BitmapDrawable*) _r1.o)->image_org_xmlvm_iphone_UIImage retain] autorelease];
    _r0.o = [((org_xmlvm_iphone_UIImage*) _r0.o) getSize__];
    [_r0.o autorelease];
    _r0.f = ((org_xmlvm_iphone_CGSize*) _r0.o)->width_float;
    _r0.i = (int) _r0.f;
    [_pool release];
    return _r0.i;
}


- (int) getIntrinsicHeight__
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r1.o = self;
    _r0.o = [[((android_graphics_drawable_BitmapDrawable*) _r1.o)->image_org_xmlvm_iphone_UIImage retain] autorelease];
    _r0.o = [((org_xmlvm_iphone_UIImage*) _r0.o) getSize__];
    [_r0.o autorelease];
    _r0.f = ((org_xmlvm_iphone_CGSize*) _r0.o)->height_float;
    _r0.i = (int) _r0.f;
    [_pool release];
    return _r0.i;
}


- (void) draw___android_graphics_Canvas :(android_graphics_Canvas*)n1
{
    id        _res;
    id        _ex;
    XMLVMElem _r0;
    XMLVMElem _r1;
    NSAutoreleasePool* _pool = [[NSAutoreleasePool alloc] init];
    _r0.o = self;
    _r1.o = n1;
    [_pool release];
    return;
}



@end

